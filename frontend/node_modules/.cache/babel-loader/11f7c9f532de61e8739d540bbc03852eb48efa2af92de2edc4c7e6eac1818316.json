{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Views/Search/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './style.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport BoardItem from '../../Components/BoardItem';\nimport { SEARCH_PATH } from '../../Constants';\nimport Pagination from '../../Components/Pagination';\nimport { getSearchBoardListRequest } from '../../Apis';\nimport { usePagination } from '../../Hooks';\n\n// component: 검색화면 컴포넌트 \nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  // state: searchWord path variable 상태 \n  const {\n    searchWord\n  } = useParams();\n  //state: 페이지 네이션 관련 상태 \n  const {\n    currentPage,\n    setCurrentPage,\n    currentSection,\n    setCurrentSection,\n    viewList,\n    viewPageList,\n    totalSection,\n    setTotalList\n  } = usePagination(5);\n  // state: 이전 검색어 상태 \n  const [preSearchWord, setPreSearchWord] = useState(null);\n  //state: 검색 게시물 개수 상태 \n  const [count, setCount] = useState(0);\n  //state: 관련 검색어 리스트 상태 \n  const [relationList, setRelationList] = useState([]);\n  //function: 네비게이트 함수 \n  const navigate = useNavigate();\n  // function: get search board list response 처리 함수 \n  const getSearchBoardListResponse = responseBody => {\n    if (!responseBody) return;\n    const {\n      code\n    } = responseBody;\n    if (code === 'DBE') alert('데이터베이스 오류입니다.');\n    if (code !== 'SU') return;\n    if (!searchWord) return;\n    const {\n      searchList\n    } = responseBody;\n    setTotalList(searchList);\n    setCount(searchList.length);\n    setPreSearchWord(searchWord);\n  };\n  // event handler : 연관 검색어 클릭 이벤트 처리 \n  const onRelationWordClickHandler = word => {\n    navigate(SEARCH_PATH(word));\n  };\n  //effect: search word 시 실행될 함수 \n  useEffect(() => {\n    if (!searchWord) return;\n    getSearchBoardListRequest(searchWord, preSearchWord).then(getSearchBoardListResponse);\n  }, [searchWord]);\n  // render: 검색화면 컴포넌트 렌더링 \n  if (!searchWord) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"search-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-title-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-title-emphasis\",\n            children: searchWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 43\n          }, this), '에 대한 검색결과 입니다.']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-contents-box\",\n        children: [count === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-cotents-nothing\",\n          children: '검색 결과가 없습니다.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-contents\",\n          children: viewList.map(boardListItem => /*#__PURE__*/_jsxDEV(BoardItem, {\n            boardListItem: boardListItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 44\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-relation-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-relation-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-relation-card-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-title\",\n                children: '관련 검색어'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this), relationList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-contents-nothing\",\n                children: '관련 검색어가 없습니다.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-contents\",\n                children: relationList.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"word-badge\",\n                  onClick: () => onRelationWordClickHandler(word),\n                  children: word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-pagination-box\",\n        children: count !== 0 && /*#__PURE__*/_jsxDEV(Pagination, {\n          currentPage: currentPage,\n          currentSection: currentSection,\n          setCurrentPage: setCurrentPage,\n          setCurrentSection: setCurrentSection,\n          viewPageList: viewPageList,\n          totalSection: totalSection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"0VEnQXxpbo52BXIccAGevWp8Kvg=\", false, function () {\n  return [useParams, usePagination, useNavigate];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","BoardItem","SEARCH_PATH","Pagination","getSearchBoardListRequest","usePagination","Fragment","_Fragment","jsxDEV","_jsxDEV","Search","_s","searchWord","currentPage","setCurrentPage","currentSection","setCurrentSection","viewList","viewPageList","totalSection","setTotalList","preSearchWord","setPreSearchWord","count","setCount","relationList","setRelationList","navigate","getSearchBoardListResponse","responseBody","code","alert","searchList","length","onRelationWordClickHandler","word","then","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","boardListItem","onClick","_c","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Views/Search/index.tsx"],"sourcesContent":["import React, { useEffect,useState} from 'react'\nimport './style.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { BoardListItem } from '../../Types/Interface';\nimport { imageche } from '../../Mocks';\nimport BoardItem from '../../Components/BoardItem';\nimport { SEARCH_PATH } from '../../Constants';\nimport Pagination from '../../Components/Pagination';\nimport { getSearchBoardListRequest } from '../../Apis';\nimport { GetSearchBoardListResponseDto } from '../../Apis/Response/Board';\nimport { ResponseDto } from '../../Apis/Response';\nimport { usePagination } from '../../Hooks';\n\n\n\n// component: 검색화면 컴포넌트 \nexport default function Search() {\n// state: searchWord path variable 상태 \nconst {searchWord}=useParams();\n  //state: 페이지 네이션 관련 상태 \n  const {\n    currentPage,\n    setCurrentPage,\n    currentSection,\n    setCurrentSection,\n    viewList,\n    viewPageList,\n    totalSection,\n    setTotalList\n}=usePagination<BoardListItem>(5);\n// state: 이전 검색어 상태 \nconst [preSearchWord,setPreSearchWord]=useState<string |null>(null);\n//state: 검색 게시물 개수 상태 \nconst [count,setCount]=useState<number>(0);\n//state: 관련 검색어 리스트 상태 \nconst [relationList,setRelationList]=useState<string[]>([]);\n//function: 네비게이트 함수 \nconst navigate= useNavigate();\n// function: get search board list response 처리 함수 \nconst getSearchBoardListResponse =(responseBody:GetSearchBoardListResponseDto|ResponseDto|null)=>{\n  if(!responseBody) return;\n  const {code}=responseBody;\n  if(code==='DBE')alert('데이터베이스 오류입니다.');\n  if(code !=='SU') return;\n\n  if(!searchWord) return;\n  const{searchList} =responseBody as GetSearchBoardListResponseDto;\n  setTotalList(searchList);\n  setCount(searchList.length);\n  setPreSearchWord(searchWord);\n}\n// event handler : 연관 검색어 클릭 이벤트 처리 \nconst onRelationWordClickHandler=(word:string) =>{\n  navigate(SEARCH_PATH(word));\n}\n//effect: search word 시 실행될 함수 \nuseEffect(()=>{\n  if(!searchWord) return;\n  getSearchBoardListRequest(searchWord,preSearchWord).then(getSearchBoardListResponse);\n},[searchWord])\n// render: 검색화면 컴포넌트 렌더링 \nif(!searchWord) return (<></>)\n  return (\n    <div id='search-wrapper'>\n      <div className='search-container'>\n         <div className='search-title-box'>\n            <div className='search-title'><span className='search-title-emphasis'>{searchWord}</span>{'에 대한 검색결과 입니다.'}</div>\n            <div className='search-count'>{count}</div>\n         </div>\n         <div className='search-contents-box'>\n          {count ===0 ?\n          <div className='search-cotents-nothing'>{'검색 결과가 없습니다.'}</div>:\n            <div className='search-contents'>\n              {viewList.map(boardListItem=><BoardItem boardListItem={boardListItem}/>)}\n            </div>\n          }\n            <div className='search-relation-box'>\n              <div className='search-relation-card'>\n                <div className='search-relation-card-container'>\n                    <div className='search-relation-card-title'>{'관련 검색어'}</div>\n                    {relationList.length===0?\n                        <div className='search-relation-card-contents-nothing'>{'관련 검색어가 없습니다.'}</div>:\n                        <div className='search-relation-card-contents'>\n                        {relationList.map(word=><div className='word-badge' onClick={()=>onRelationWordClickHandler(word)}>{word}</div>)}\n                    </div>\n                    }\n                </div>\n              </div>\n            </div>\n         </div>\n         <div className='search-pagination-box'>\n          {count !== 0&&\n          <Pagination\n          currentPage={currentPage}\n          currentSection={currentSection}\n          setCurrentPage={setCurrentPage}\n          setCurrentSection={setCurrentSection}\n          viewPageList={viewPageList}\n          totalSection={totalSection}\n          />}\n         </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}