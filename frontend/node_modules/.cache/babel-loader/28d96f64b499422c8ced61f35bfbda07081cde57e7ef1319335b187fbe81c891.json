{"ast":null,"code":"export const convertUrlToFile = async url => {\n  const response = await fetch(url);\n  const data = await response.blob();\n  const extend = url.split('.').pop();\n  const fileName = url.split('/').pop();\n  const meta = {\n    type: `image/${extend}`\n  };\n  return new File([data], fileName, meta);\n};\n\n// url 받아와서 실제 파일로 변경해주는 작업;\n\nexport const convertUrlsToFile = async urls => {\n  const files = [];\n  for (const url of urls) {\n    const file = await convertUrlToFile(url);\n    files.push(file);\n  }\n  return files;\n};","map":{"version":3,"names":["convertUrlToFile","url","response","fetch","data","blob","extend","split","pop","fileName","meta","type","File","convertUrlsToFile","urls","files","file","push"],"sources":["/Users/jeongjaeho/Desktop/프로젝트/Board/frontend/src/Board/Utils/index.ts"],"sourcesContent":["export const convertUrlToFile = async (url:string)=>{\n    const response =await fetch(url);\n    const data= await response.blob();\n    const extend =url.split('.').pop();\n    const fileName=url.split('/').pop();\n    const meta={type:`image/${extend}`};\n\n    return new File([data], fileName as string, meta);\n\n}\n\n// url 받아와서 실제 파일로 변경해주는 작업;\n\nexport const convertUrlsToFile =async(urls:string[])=>{\n    const files:File[]=[];\n    for(const url of urls){\n        const file= await convertUrlToFile(url);\n        files.push(file);\n    }\n    return files;\n}"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAOC,GAAU,IAAG;EAChD,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAACF,GAAG,CAAC;EAChC,MAAMG,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACjC,MAAMC,MAAM,GAAEL,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;EAClC,MAAMC,QAAQ,GAACR,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;EACnC,MAAME,IAAI,GAAC;IAACC,IAAI,EAAE,SAAQL,MAAO;EAAC,CAAC;EAEnC,OAAO,IAAIM,IAAI,CAAC,CAACR,IAAI,CAAC,EAAEK,QAAQ,EAAYC,IAAI,CAAC;AAErD,CAAC;;AAED;;AAEA,OAAO,MAAMG,iBAAiB,GAAE,MAAMC,IAAa,IAAG;EAClD,MAAMC,KAAY,GAAC,EAAE;EACrB,KAAI,MAAMd,GAAG,IAAIa,IAAI,EAAC;IAClB,MAAME,IAAI,GAAE,MAAMhB,gBAAgB,CAACC,GAAG,CAAC;IACvCc,KAAK,CAACE,IAAI,CAACD,IAAI,CAAC;EACpB;EACA,OAAOD,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}