{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Views/Authentication/index.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './style.css';\nimport InputBox from '../../Components/InputBox/Index';\nimport { SignInRequest } from '../../Apis';\nimport { useCookies } from 'react-cookie';\nimport { MAIN_PATH } from '../../Constants';\nimport { useNavigate } from 'react-router-dom';\n\n// component: 인증화면 컴포넌트 \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // state: 화면 상태 (로그인,회원가입에 따른) \n  const [view, setView] = useState('sign-in');\n  // state: 쿠키 상태 \n  const [cookies, setCookie] = useCookies();\n  // function: 네비게이트 함수 \n  const navigator = useNavigate();\n  // component: sign in card 컴포넌트 \n  const SignInCard = () => {\n    _s();\n    // state: 이메일 요소 참조 상태 \n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 \n    const passwordRef = useRef(null);\n    // state: 이메일 상태 \n    const [email, setEmail] = useState('');\n    // state: 패스워드 상태 \n    const [password, setPassword] = useState('');\n    // state: 패스워드 타입 상태 (보안)\n    const [passwordType, setPasswordType] = useState('password');\n    // state: 패스워드 버튼 아이콘 상태 \n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n\n    // state: 에러 상태 \n    const [error, setError] = useState(false);\n    // function: sign in response 처리 함수 \n    const SignUpCard = () => {\n      const signInResponse = responseBody => {\n        if (!responseBody) {\n          alert('네트워크 이상입니다.');\n          return;\n        }\n        const {\n          code\n        } = responseBody;\n        if (code === 'DBE') alert('데이터베이스 오류 입니다.');\n        if (code === 'SF' || code === 'VF') setError(true);\n        if (code !== 'SU') return;\n        const {\n          token,\n          expirationTime\n        } = responseBody;\n        const now = new Date().getTime();\n        const expires = new Date(now + expirationTime * 1000);\n        setCookie('accessToken', token, {\n          expires,\n          path: MAIN_PATH()\n        });\n        navigator(MAIN_PATH());\n      };\n\n      // event handler: 이메일 변경 이벤트 처리 \n      const onEmailChangeHandler = event => {\n        setError(false);\n        const {\n          value\n        } = event.target;\n        setEmail(value);\n      };\n      // event handler: 비밀번호 변경 이벤트 처리 \n      const onPasswordChangeHandler = event => {\n        setError(false);\n        const {\n          value\n        } = event.target;\n        setPassword(value);\n      };\n\n      // event handler: 로그인 버튼 클릭 이벤트 처리 \n      const onSignInButtonClickHandler = () => {\n        const requestBody = {\n          email,\n          password\n        };\n        SignInRequest(requestBody).then(signInResponse);\n      };\n      // event handler: 회원가입 버튼 클릭 이벤트 처리 \n      const onSignUpButtonClickHandler = () => {\n        setView('sign-up');\n      };\n\n      // event handler: 패스워드 버튼 클릭 이벤트 처리 \n      const onPasswordButtonClickHandler = () => {\n        if (passwordType === 'text') {\n          setPasswordType('password');\n          setPasswordButtonIcon('eye-light-off-icon');\n        } else {\n          setPasswordType('text');\n          setPasswordButtonIcon('eye-light-on-icon');\n        }\n      };\n    };\n    // event handler: 이메일 인풋 키 다운 이벤트 처리 \n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n\n    // event handler: 패스워드 인풋 키 다운 이벤트 처리 \n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onSignInButtonClickHandler();\n    };\n\n    // render: sign in card 컴포넌트 렌더링 \n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '로그인'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 \",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandler,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 \",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandler,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: '이메일 주소 또는 비밀번호를 잘못 입력했습니다\\n입력하신 내용을 다시 확인해주세요.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: '로그인'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['신규 사용자이신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignUpButtonClickHandler,\n                children: '회원가입'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 1\n    }, this);\n  };\n\n  // component: sign up card 컴포넌트 \n  _s(SignInCard, \"Bo/zCzGeFNz49Gq3q0GgtlvH5GE=\");\n  const SignUpCard = () => {\n    _s2();\n    // state: 이메일 요소 참조 상태 \n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 \n    const passwordRef = useRef(null);\n    // state: 패스워드 확인 요소 참조 상태 \n    const passwordChekRef = useRef(null);\n    // state: 페이지 번호 상태 \n    const [page, setPage] = useState(1);\n    // state: 이메일 상태 \n    const [email, setEmail] = useState('');\n    // state: 패스워드 상태 \n    const [password, setPassword] = useState('');\n    // state: 패스워드 확인 상태 \n    const [passwordChek, setPasswordChek] = useState('');\n    // state: 패스워드 타입 상태 (보안)\n    const [passwordType, setPasswordType] = useState('password');\n    // state: 패스워드 확인 타입 상태 \n    const [passwordChekType, setPasswordChekType] = useState('password');\n\n    // state: 이메일 에러 상태 \n    const [isEmailError, setEmailError] = useState(false);\n    // state: 패스워드 에러 상태 \n    const [isPasswordError, setPasswordError] = useState(false);\n    // state: 패스워드 확인 에러 상태 \n    const [isPasswordChekError, setPasswordChekError] = useState(false);\n    // state: 이메일 에러 메세지 상태 \n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\n    // state: 비밀번호 에러 메세지 상태 \n    const [passwordErrorMessage, setpasswordErrorMessage] = useState('');\n    // state: 비밀번호 확인 에러 메세지 상태 \n    const [passwordChekErrorMessage, setPasswordCheckErrorMessage] = useState('');\n    // state: 패스워드 버튼 아이콘 상태 \n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    // state: 패스워드 확인 버튼 아이콘 상태 \n    const [passwordChekButtonIcon, setPasswordChekButtonIcon] = useState('eye-light-off-icon');\n    // event handler: 이메일 변경 이벤트 처리 \n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    // event handler: 비밀번호 변경 이벤트 처리 \n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n    // event handler: 비밀번호 변경 이벤트 처리 \n    const onPasswordChekChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordChek(value);\n    };\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 \n    const onPasswordButtonClickHandler = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordButtonIcon('eye-light-on-icon');\n        setPasswordType('text');\n      } else {\n        setPasswordButtonIcon('eye-light-off-icon');\n        setPasswordType('password');\n      }\n    };\n    // event handler: 패스워드 확인 버튼 클릭 이벤트 처리 \n    const onPasswordChekButtonClickHandler = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordChekButtonIcon('eye-light-on-icon');\n        setPasswordChekType('text');\n      } else {\n        setPasswordChekButtonIcon('eye-light-off-icon');\n        setPasswordChekType('password');\n      }\n\n      // event handler: 다음 단계 버튼 클릭 이벤트 처리 \n      const onNextButtonClickHandler = () => {\n        const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n        const isEmailPattern = emailPattern.test(email);\n        if (!email) {\n          setEmailError(true);\n          setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n        }\n        const isChekedPassword = password.trim().length >= 8;\n        if (!isChekedPassword) {\n          setPasswordError(true);\n          setpasswordErrorMessage('비밀번호를 8자리 이상 입력해주세요.');\n        }\n        const isEqualPassword = password === passwordChek;\n        if (!isEqualPassword) {\n          setPasswordChekError(true);\n          setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다');\n        }\n        if (!email || !isChekedPassword || !isEqualPassword) return;\n        setPage(2);\n      };\n\n      // event handler: 이메일 키 다운 이벤트 처리 \n\n      const onEmailKeyDownHandler = event => {\n        if (event.key !== 'Enter') return;\n        if (!passwordRef.current) return;\n        passwordRef.current.focus();\n      };\n\n      // event handler: 비밀번호 키 다운 이벤트 처리 \n\n      const onPasswordKeyDownHandler = event => {\n        if (event.key !== 'Enter') return;\n        if (!passwordChekRef.current) return;\n        passwordChekRef.current.focus();\n      };\n\n      // event handler: 비밀번호 확인 키 다운 이벤트 처리 \n\n      const onPasswordChekKeyDownHandler = event => {\n        if (event.key !== 'Enter') return;\n        onNextButtonClickHandler();\n      };\n\n      // render: sign up card 컴포넌트 렌더링 \n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-card-title\",\n                children: '회원가입'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-card-page\",\n                children: `${page}/page`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: emailRef,\n              label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n              value: email,\n              onChange: onEmailChangeHandler,\n              error: isEmailError,\n              message: emailErrorMessage,\n              onKeyDown: onEmailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n              type: passwordType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n              value: password,\n              onChange: onPasswordChangeHandler,\n              error: isPasswordError,\n              message: passwordErrorMessage,\n              icon: passwordButtonIcon,\n              onButtonClick: onPasswordButtonClickHandler,\n              onKeyDown: onPasswordKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordChekRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n              type: passwordChekType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n              value: passwordChek,\n              onChange: onPasswordChekChangeHandler,\n              error: isPasswordChekError,\n              message: passwordChekErrorMessage,\n              icon: passwordChekButtonIcon,\n              onButtonClick: onPasswordChekButtonClickHandler,\n              onKeyDown: onPasswordChekKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-bottom\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"black-large-full-button\",\n              onClick: onNextButtonClickHandler,\n              children: '다음단계'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description-box\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-description\",\n                children: ['이미 계정이 있으신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"auth-description-link\",\n                  children: '로그인'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 79\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 5\n      }, this);\n    };\n\n    // render: 인증화면 컴포넌트 렌더링 \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"auth-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-contents\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-logo-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-jumbotron-text\",\n                children: '환영합니다.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-jumbotron-text\",\n                children: '김채원 ❤️ 블로그'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 17\n        }, this), view == 'sign-in' && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 35\n        }, this), view == 'sign-up' && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(SignUpCard, \"c/0VJLZ+5lH2UwLZnhqtUqm4OoY=\");\n}\n_s3(Authentication, \"2l4yDcXNynVGZWMSBrSOZv4e/yo=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","useState","useRef","InputBox","SignInRequest","useCookies","MAIN_PATH","useNavigate","jsxDEV","_jsxDEV","Authentication","_s3","_s","$RefreshSig$","_s2","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","SignUpCard","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","onSignUpButtonClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","passwordChekRef","page","setPage","passwordChek","setPasswordChek","passwordChekType","setPasswordChekType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordChekError","setPasswordChekError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setpasswordErrorMessage","passwordChekErrorMessage","setPasswordCheckErrorMessage","passwordChekButtonIcon","setPasswordChekButtonIcon","onPasswordChekChangeHandler","onPasswordChekButtonClickHandler","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isChekedPassword","trim","length","isEqualPassword","onPasswordChekKeyDownHandler","message","id","_c","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Views/Authentication/index.tsx"],"sourcesContent":["import React, { useState ,KeyboardEvent, useRef, ChangeEvent} from 'react'\nimport './style.css';\n\nimport InputBox from '../../Components/InputBox/Index';\nimport { SignInRequestDto } from '../../Apis/Request/Auth';\nimport { SignInRequest } from '../../Apis';\nimport { SignInResponseDto } from '../../Apis/Response/Auth';\nimport { ResponseDto } from '../../Apis/Response';\nimport { useCookies } from 'react-cookie';\nimport { MAIN_PATH } from '../../Constants';\nimport { useNavigate } from 'react-router-dom';\n\n\n\n\n// component: 인증화면 컴포넌트 \nexport default function Authentication() {\n\n// state: 화면 상태 (로그인,회원가입에 따른) \nconst[view,setView]=useState<'sign-in'|'sign-up'>('sign-in');\n// state: 쿠키 상태 \nconst [cookies, setCookie]=useCookies();\n// function: 네비게이트 함수 \nconst navigator=useNavigate();\n// component: sign in card 컴포넌트 \nconst SignInCard=()=>{\n// state: 이메일 요소 참조 상태 \nconst emailRef =useRef<HTMLInputElement |null>(null);\n// state: 패스워드 요소 참조 상태 \nconst passwordRef =useRef<HTMLInputElement |null>(null);\n// state: 이메일 상태 \nconst[email,setEmail]=useState<string>('');\n// state: 패스워드 상태 \nconst[password,setPassword]=useState<string>('');\n// state: 패스워드 타입 상태 (보안)\nconst[passwordType,setPasswordType]=useState<'text'|'password'>('password');\n// state: 패스워드 버튼 아이콘 상태 \nconst[passwordButtonIcon,setPasswordButtonIcon] = useState<'eye-light-off-icon'|'eye-light-on-icon'>('eye-light-off-icon');\n\n// state: 에러 상태 \nconst[error,setError]=useState<boolean>(false);\n// function: sign in response 처리 함수 \nconst SignUpCard=()=>{\nconst signInResponse=(responseBody:SignInResponseDto | ResponseDto|null)=>{\n  if(!responseBody){\n    alert('네트워크 이상입니다.');\n    return;\n  }\n  const{code}=responseBody;\n  if(code==='DBE') alert('데이터베이스 오류 입니다.');\n  if(code==='SF'||code==='VF') setError(true) ;\n  if(code !=='SU') return;\n\n  const {token, expirationTime}=responseBody as SignInResponseDto;\n  const now= new Date().getTime();\n  const expires=new Date(now + expirationTime * 1000);\n\n  setCookie('accessToken',token,{expires,path:MAIN_PATH()});\n  navigator(MAIN_PATH());\n}\n\n// event handler: 이메일 변경 이벤트 처리 \nconst onEmailChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n    setError(false);\n    const {value}=event.target;\n\n    setEmail(value);\n}\n// event handler: 비밀번호 변경 이벤트 처리 \nconst onPasswordChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  setError(false);\n  const {value}=event.target;\n\n  setPassword(value);\n}\n\n\n\n// event handler: 로그인 버튼 클릭 이벤트 처리 \nconst onSignInButtonClickHandler=()=>{\n\n    const requestBody:SignInRequestDto={email,password};\n    SignInRequest(requestBody).then(signInResponse);\n}\n// event handler: 회원가입 버튼 클릭 이벤트 처리 \nconst onSignUpButtonClickHandler=()=>{\n  setView('sign-up');\n}\n\n// event handler: 패스워드 버튼 클릭 이벤트 처리 \nconst onPasswordButtonClickHandler=()=>{\n  \n  if(passwordType==='text'){\n    setPasswordType('password');\n    setPasswordButtonIcon('eye-light-off-icon');\n\n  }\n  else{\n    setPasswordType('text');\n    setPasswordButtonIcon('eye-light-on-icon');\n  }\n}\n};\n// event handler: 이메일 인풋 키 다운 이벤트 처리 \nconst onEmailKeyDownHandler=(event: KeyboardEvent<HTMLInputElement>)=>{\n  \n  if(event.key !=='Enter')return;\n  if(!passwordRef.current) return;\n  passwordRef.current.focus();\n\n}\n\n\n// event handler: 패스워드 인풋 키 다운 이벤트 처리 \nconst onPasswordKeyDownHandler=(event: KeyboardEvent<HTMLInputElement>)=>{\n  \n  if(event.key !=='Enter')return;\n  onSignInButtonClickHandler();\n\n}\n\n// render: sign in card 컴포넌트 렌더링 \n\n  return(\n\n\n<div className='auth-card' >\n\n  <div className='auth-card-box'>\n    \n\n\n                <div className='auth-card-top'>\n                                <div className='auth-card-title-box'>\n                                <div className='auth-card-title'>{'로그인'}</div>\n                                </div>\n                                <InputBox ref={emailRef} label='이메일 주소' type='text' placeholder='이메일 주소를 입력해주세요 ' error={error} value={email} onChange={onEmailChangeHandler}  onKeyDown={onEmailKeyDownHandler}/>\n                                <InputBox ref={passwordRef} label='패스워드'type={passwordType} placeholder='비밀번호를 입력해주세요 ' error={error} value={password} onChange={onPasswordChangeHandler}  icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler}/>\n\n                </div>\n                \n                <div className='auth-card-bottom'>\n                                { error &&\n                                <div className='auth-sign-in-error-box'>\n                                                    <div className='auth-sign-in-error-message'>{'이메일 주소 또는 비밀번호를 잘못 입력했습니다\\n입력하신 내용을 다시 확인해주세요.'}</div>\n                                </div>\n                                }\n                                <div className='black-large-full-button'onClick={onSignInButtonClickHandler}>{'로그인'}</div>\n                                <div className='auth-description-box'>\n                                     <div className='auth-description'>{'신규 사용자이신가요?'}<span className='auth-description-link' onClick={onSignUpButtonClickHandler}>{'회원가입'}</span></div>\n                                </div>\n\n\n                </div>\n  \n\n\n\n  </div>\n\n</div>\n  );\n};\n\n\n\n\n\n\n// component: sign up card 컴포넌트 \nconst SignUpCard=()=>{\n// state: 이메일 요소 참조 상태 \nconst emailRef =useRef<HTMLInputElement |null>(null);\n// state: 패스워드 요소 참조 상태 \nconst passwordRef =useRef<HTMLInputElement |null>(null);\n// state: 패스워드 확인 요소 참조 상태 \nconst passwordChekRef =useRef<HTMLInputElement |null>(null);\n// state: 페이지 번호 상태 \nconst[page,setPage]=useState<1|2>(1);\n// state: 이메일 상태 \nconst[email,setEmail]=useState<string>('');\n// state: 패스워드 상태 \nconst[password,setPassword]=useState<string>('');\n// state: 패스워드 확인 상태 \nconst[passwordChek,setPasswordChek]=useState<string>('');\n// state: 패스워드 타입 상태 (보안)\nconst[passwordType,setPasswordType]=useState<'text'|'password'>('password');\n// state: 패스워드 확인 타입 상태 \nconst[passwordChekType,setPasswordChekType]=useState<'text'|'password'>('password');\n\n// state: 이메일 에러 상태 \nconst[isEmailError,setEmailError]=useState<boolean>(false);\n// state: 패스워드 에러 상태 \nconst[isPasswordError,setPasswordError]=useState<boolean>(false);\n// state: 패스워드 확인 에러 상태 \nconst[isPasswordChekError,setPasswordChekError]=useState<boolean>(false);\n// state: 이메일 에러 메세지 상태 \nconst[emailErrorMessage,setEmailErrorMessage]=useState<string>('');\n// state: 비밀번호 에러 메세지 상태 \nconst[passwordErrorMessage,setpasswordErrorMessage]=useState<string>('');\n// state: 비밀번호 확인 에러 메세지 상태 \nconst[passwordChekErrorMessage,setPasswordCheckErrorMessage]=useState<string>('');\n// state: 패스워드 버튼 아이콘 상태 \nconst[passwordButtonIcon,setPasswordButtonIcon] = useState<'eye-light-off-icon'|'eye-light-on-icon'>('eye-light-off-icon');\n// state: 패스워드 확인 버튼 아이콘 상태 \nconst[passwordChekButtonIcon,setPasswordChekButtonIcon] = useState<'eye-light-off-icon'|'eye-light-on-icon'>('eye-light-off-icon');\n// event handler: 이메일 변경 이벤트 처리 \nconst onEmailChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  const {value}=event.target;\n\n  setEmail(value);\n}\n\n// event handler: 비밀번호 변경 이벤트 처리 \nconst onPasswordChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  \n  const {value}=event.target;\n\n  setPassword(value);\n}\n// event handler: 비밀번호 변경 이벤트 처리 \nconst onPasswordChekChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  \n  const {value}=event.target;\n\n  setPasswordChek(value);\n}\n// event handler: 패스워드 버튼 클릭 이벤트 처리 \nconst onPasswordButtonClickHandler=()=>{\n  if(passwordButtonIcon==='eye-light-off-icon'){\n    setPasswordButtonIcon('eye-light-on-icon');\n    setPasswordType('text');\n  }\n  else{\n    setPasswordButtonIcon('eye-light-off-icon');\n    setPasswordType('password');\n  }\n }\n// event handler: 패스워드 확인 버튼 클릭 이벤트 처리 \nconst onPasswordChekButtonClickHandler=()=>{\n  if(passwordButtonIcon==='eye-light-off-icon'){\n    setPasswordChekButtonIcon('eye-light-on-icon');\n    setPasswordChekType('text');\n  }\n  else{\n    setPasswordChekButtonIcon('eye-light-off-icon');\n    setPasswordChekType('password');\n  }  \n\n// event handler: 다음 단계 버튼 클릭 이벤트 처리 \nconst onNextButtonClickHandler=()=>{\n  const emailPattern=/^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n  const isEmailPattern=emailPattern.test(email);\n  if(!email){\n    setEmailError(true);\n    setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.')\n  }\n\n  const isChekedPassword=password.trim().length>=8;\n  if(!isChekedPassword){\n    setPasswordError(true);\n    setpasswordErrorMessage('비밀번호를 8자리 이상 입력해주세요.');\n  }\n  const isEqualPassword=password===passwordChek;\n  if(!isEqualPassword){\n    setPasswordChekError(true);\n    setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다');\n  }\n  if(!email||!isChekedPassword||!isEqualPassword)return;\n    setPage(2);\n}\n\n// event handler: 이메일 키 다운 이벤트 처리 \n\nconst  onEmailKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n  if(!passwordRef.current)return;\n  passwordRef.current.focus();\n\n}\n\n// event handler: 비밀번호 키 다운 이벤트 처리 \n\nconst  onPasswordKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n  if(!passwordChekRef.current)return;\n  passwordChekRef.current.focus();\n  \n}\n\n// event handler: 비밀번호 확인 키 다운 이벤트 처리 \n\nconst  onPasswordChekKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n  onNextButtonClickHandler();\n  \n}\n\n\n// render: sign up card 컴포넌트 렌더링 \n  return(\n    <div className='auth-card'>\n\n      <div className='auth-card-box'>\n\n\n\n                      <div className='auth-card-top'>\n                          \n                         <div className='auth-card-title-box'>\n                              <div className='auth-card-title'>{'회원가입'}</div>\n                              <div className='auth-card-page'>{`${page}/page`}</div>\n                         </div>\n                         <InputBox ref={emailRef} label='이메일 주소*' type='text' placeholder='이메일 주소를 입력해 주세요.' value={email} onChange={onEmailChangeHandler} error={isEmailError} message={emailErrorMessage} onKeyDown={onEmailKeyDownHandler}/>\n                         <InputBox ref={passwordRef} label='비밀번호*' type={passwordType} placeholder='비밀번호를 입력해 주세요.' value={password} onChange={onPasswordChangeHandler} error={isPasswordError} message={passwordErrorMessage} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler}/>\n                         <InputBox ref={passwordChekRef} label='비밀번호 확인*'type={passwordChekType} placeholder='비밀번호를 다시 입력해 주세요.'value={passwordChek} onChange={onPasswordChekChangeHandler} error={isPasswordChekError} message={passwordChekErrorMessage} icon={passwordChekButtonIcon} onButtonClick={onPasswordChekButtonClickHandler} onKeyDown={onPasswordChekKeyDownHandler}/>\n                      </div>\n\n\n\n\n\n                      <div className='auth-card-bottom'>\n                           <div className='black-large-full-button' onClick={onNextButtonClickHandler} >{'다음단계'}</div>\n                           <div className='auth-description-box'>\n                           <div className='auth-description'>{'이미 계정이 있으신가요?'}<span className='auth-description-link' >{'로그인'}</span></div>\n                           </div>   \n                      </div>\n\n      </div>\n      \n    </div>\n  );\n};\n\n// render: 인증화면 컴포넌트 렌더링 \n  return (\n    <div id='auth-wrapper'>\n      <div className='auth-container'>\n                <div className='auth-jumbotron-box'>\n                        <div className='auth-jumbotron-contents'>\n                                <div className='auth-logo-icon'></div>\n                                <div className='auth-jumbotron-text-box'>\n                                        <div className='auth-jumbotron-text'>{'환영합니다.'}</div>\n                                        <div className='auth-jumbotron-text'>{'김채원 ❤️ 블로그'}</div>\n                                </div>\n                        </div>\n                </div>\n                {view=='sign-in'&&<SignInCard/>}\n                {view=='sign-up'&&<SignUpCard/>}\n      </div>\n              \n    </div>\n  )\n\n  };\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}