{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Views/Authentication/index.tsx\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './style.css';\nimport InputBox from '../../Components/InputBox/Index';\nimport { SignInRequest } from '../../Apis';\nimport { useCookies } from 'react-cookie';\nimport { MAIN_PATH } from '../../Constants';\nimport { useNavigate } from 'react-router-dom';\n\n// component: 인증화면 컴포넌트 \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s2();\n  var _s = $RefreshSig$();\n  // state: 화면 상태 (로그인,회원가입에 따른) \n  const [view, setView] = useState('sign-in');\n  // state: 쿠키 상태 \n  const [cookies, setCookie] = useCookies();\n  // function: 네비게이트 함수 \n  const navigator = useNavigate();\n\n  // component: sign in card 컴포넌트 \n  const SignInCard = () => {\n    _s();\n    // state: 이메일 요소 참조 상태 \n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 \n    const passwordRef = useRef(null);\n    // state: 이메일 상태 \n    const [email, setEmail] = useState('');\n    // state: 패스워드 상태 \n    const [password, setPassword] = useState('');\n    // state: 패스워드 타입 상태 (보안)\n    const [passwordType, setPasswordType] = useState('password');\n    // state: 패스워드 버튼 아이콘 상태 \n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n\n    // state: 에러 상태 \n    const [error, setError] = useState(false);\n    // function: sign in response 처리 함수 \n\n    const signInResponse = responseBody => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다.');\n        return;\n      }\n      const {\n        code\n      } = responseBody;\n      if (code === 'DBE') alert('데이터베이스 오류 입니다.');\n      if (code === 'SF' || code === 'VF') setError(true);\n      if (code !== 'SU') return;\n      const {\n        token,\n        expirationTime\n      } = responseBody;\n      const now = new Date().getTime();\n      const expires = new Date(now + expirationTime * 1000);\n      setCookie('accessToken', token, {\n        expires,\n        path: MAIN_PATH()\n      });\n      navigator(MAIN_PATH());\n    };\n\n    // event handler: 이메일 변경 이벤트 처리 \n    const onEmailChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n    // event handler: 비밀번호 변경 이벤트 처리 \n    const onPasswordChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    // event handler: 로그인 버튼 클릭 이벤트 처리 \n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      SignInRequest(requestBody).then(signInResponse);\n    };\n    // event handler: 회원가입 버튼 클릭 이벤트 처리 \n    const onSignUpButtonClickHandler = () => {\n      setView('sign-up');\n    };\n\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 \n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setPasswordButtonIcon('eye-light-off-icon');\n      } else {\n        setPasswordType('text');\n        setPasswordButtonIcon('eye-light-on-icon');\n      }\n    };\n  };\n  // event handler: 이메일 인풋 키 다운 이벤트 처리 \n  _s(SignInCard, \"Bo/zCzGeFNz49Gq3q0GgtlvH5GE=\");\n  const onEmailKeyDownHandler = event => {\n    if (event.key !== 'Enter') return;\n    if (!passwordRef.current) return;\n    passwordRef.current.focus();\n  };\n\n  // event handler: 패스워드 인풋 키 다운 이벤트 처리 \n  const onPasswordKeyDownHandler = event => {\n    if (event.key !== 'Enter') return;\n    onSignInButtonClickHandler();\n  };\n\n  // render: sign in card 컴포넌트 렌더링 \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-title-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title\",\n            children: '로그인'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n          ref: emailRef,\n          label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n          type: \"text\",\n          placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 \",\n          error: error,\n          value: email,\n          onChange: onEmailChangeHandler,\n          onKeyDown: onEmailKeyDownHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n          ref: passwordRef,\n          label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n          type: passwordType,\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 \",\n          error: error,\n          value: password,\n          onChange: onPasswordChangeHandler,\n          icon: passwordButtonIcon,\n          onButtonClick: onPasswordButtonClickHandler,\n          onKeyDown: onPasswordKeyDownHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-bottom\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-sign-in-error-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-message\",\n            children: '이메일 주소 또는 비밀번호를 잘못 입력했습니다\\n입력하신 내용을 다시 확인해주세요.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"black-large-full-button\",\n          onClick: onSignInButtonClickHandler,\n          children: '로그인'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-description-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description\",\n            children: ['신규 사용자이신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-description-link\",\n              onClick: onSignUpButtonClickHandler,\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 87\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 1\n  }, this);\n}\n_s2(Authentication, \"2l4yDcXNynVGZWMSBrSOZv4e/yo=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\n;\n\n// component: sign up card 컴포넌트 \nconst SignUpCard = () => {\n  _s3();\n  // state: 이메일 요소 참조 상태 \n  const emailRef = useRef(null);\n  // state: 패스워드 요소 참조 상태 \n  const passwordRef = useRef(null);\n  // state: 패스워드 확인 요소 참조 상태 \n  const passwordChekRef = useRef(null);\n  // state: 페이지 번호 상태 \n  const [page, setPage] = useState(1);\n  // state: 이메일 상태 \n  const [email, setEmail] = useState('');\n  // state: 패스워드 상태 \n  const [password, setPassword] = useState('');\n  // state: 패스워드 확인 상태 \n  const [passwordChek, setPasswordChek] = useState('');\n  // state: 패스워드 타입 상태 (보안)\n  const [passwordType, setPasswordType] = useState('password');\n  // state: 패스워드 확인 타입 상태 \n  const [passwordChekType, setPasswordChekType] = useState('password');\n\n  // state: 이메일 에러 상태 \n  const [isEmailError, setEmailError] = useState(false);\n  // state: 패스워드 에러 상태 \n  const [isPasswordError, setPasswordError] = useState(false);\n  // state: 패스워드 확인 에러 상태 \n  const [isPasswordChekError, setPasswordChekError] = useState(false);\n  // state: 이메일 에러 메세지 상태 \n  const [emailErrorMessage, setEmailErrorMessage] = useState('');\n  // state: 비밀번호 에러 메세지 상태 \n  const [passwordErrorMessage, setpasswordErrorMessage] = useState('');\n  // state: 비밀번호 확인 에러 메세지 상태 \n  const [passwordChekErrorMessage, setPasswordCheckErrorMessage] = useState('');\n  // state: 패스워드 버튼 아이콘 상태 \n  const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n  // state: 패스워드 확인 버튼 아이콘 상태 \n  const [passwordChekButtonIcon, setPasswordChekButtonIcon] = useState('eye-light-off-icon');\n  // event handler: 이메일 변경 이벤트 처리 \n  const onEmailChangeHandler = event => {\n    const {\n      value\n    } = event.target;\n    setEmail(value);\n  };\n\n  // event handler: 비밀번호 변경 이벤트 처리 \n  const onPasswordChangeHandler = event => {\n    const {\n      value\n    } = event.target;\n    setPassword(value);\n  };\n  // event handler: 비밀번호 변경 이벤트 처리 \n  const onPasswordChekChangeHandler = event => {\n    const {\n      value\n    } = event.target;\n    setPasswordChek(value);\n  };\n  // event handler: 패스워드 버튼 클릭 이벤트 처리 \n  const onPasswordButtonClickHandler = () => {\n    if (passwordButtonIcon === 'eye-light-off-icon') {\n      setPasswordButtonIcon('eye-light-on-icon');\n      setPasswordType('text');\n    } else {\n      setPasswordButtonIcon('eye-light-off-icon');\n      setPasswordType('password');\n    }\n  };\n  // event handler: 패스워드 확인 버튼 클릭 이벤트 처리 \n  const onPasswordChekButtonClickHandler = () => {\n    if (passwordButtonIcon === 'eye-light-off-icon') {\n      setPasswordChekButtonIcon('eye-light-on-icon');\n      setPasswordChekType('text');\n    } else {\n      setPasswordChekButtonIcon('eye-light-off-icon');\n      setPasswordChekType('password');\n    }\n\n    // event handler: 다음 단계 버튼 클릭 이벤트 처리 \n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!email) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isChekedPassword = password.trim().length >= 8;\n      if (!isChekedPassword) {\n        setPasswordError(true);\n        setpasswordErrorMessage('비밀번호를 8자리 이상 입력해주세요.');\n      }\n      const isEqualPassword = password === passwordChek;\n      if (!isEqualPassword) {\n        setPasswordChekError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다');\n      }\n      if (!email || !isChekedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n\n    // event handler: 이메일 키 다운 이벤트 처리 \n\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n\n    // event handler: 비밀번호 키 다운 이벤트 처리 \n\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordChekRef.current) return;\n      passwordChekRef.current.focus();\n    };\n\n    // event handler: 비밀번호 확인 키 다운 이벤트 처리 \n\n    const onPasswordChekKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onNextButtonClickHandler();\n    };\n\n    // render: sign up card 컴포넌트 렌더링 \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/page`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n            value: email,\n            onChange: onEmailChangeHandler,\n            error: isEmailError,\n            message: emailErrorMessage,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n            value: password,\n            onChange: onPasswordChangeHandler,\n            error: isPasswordError,\n            message: passwordErrorMessage,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordChekRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n            type: passwordChekType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n            value: passwordChek,\n            onChange: onPasswordChekChangeHandler,\n            error: isPasswordChekError,\n            message: passwordChekErrorMessage,\n            icon: passwordChekButtonIcon,\n            onButtonClick: onPasswordChekButtonClickHandler,\n            onKeyDown: onPasswordChekKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: '다음단계'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['이미 계정이 있으신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                children: '로그인'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 79\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 5\n    }, this);\n  };\n\n  // render: 인증화면 컴포넌트 렌더링 \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: '환영합니다.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: '김채원 ❤️ 블로그'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this), view == 'sign-in' && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 35\n      }, this), view == 'sign-up' && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n};\n_s3(SignUpCard, \"c/0VJLZ+5lH2UwLZnhqtUqm4OoY=\");\n_c2 = SignUpCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Authentication\");\n$RefreshReg$(_c2, \"SignUpCard\");","map":{"version":3,"names":["React","useState","useRef","InputBox","SignInRequest","useCookies","MAIN_PATH","useNavigate","jsxDEV","_jsxDEV","Authentication","_s2","_s","$RefreshSig$","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","onSignUpButtonClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","_c","SignUpCard","_s3","passwordChekRef","page","setPage","passwordChek","setPasswordChek","passwordChekType","setPasswordChekType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordChekError","setPasswordChekError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setpasswordErrorMessage","passwordChekErrorMessage","setPasswordCheckErrorMessage","passwordChekButtonIcon","setPasswordChekButtonIcon","onPasswordChekChangeHandler","onPasswordChekButtonClickHandler","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isChekedPassword","trim","length","isEqualPassword","onPasswordChekKeyDownHandler","message","id","_c2","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Views/Authentication/index.tsx"],"sourcesContent":["import React, { useState ,KeyboardEvent, useRef, ChangeEvent} from 'react'\nimport './style.css';\n\nimport InputBox from '../../Components/InputBox/Index';\nimport { SignInRequestDto } from '../../Apis/Request/Auth';\nimport { SignInRequest } from '../../Apis';\nimport { SignInResponseDto } from '../../Apis/Response/Auth';\nimport { ResponseDto } from '../../Apis/Response';\nimport { useCookies } from 'react-cookie';\nimport { MAIN_PATH } from '../../Constants';\nimport { useNavigate } from 'react-router-dom';\n\n\n// component: 인증화면 컴포넌트 \nexport default function Authentication() {\n\n// state: 화면 상태 (로그인,회원가입에 따른) \nconst[view,setView]=useState<'sign-in'|'sign-up'>('sign-in');\n// state: 쿠키 상태 \nconst [cookies, setCookie]=useCookies();\n// function: 네비게이트 함수 \nconst navigator=useNavigate();\n\n// component: sign in card 컴포넌트 \nconst SignInCard=()=>{\n// state: 이메일 요소 참조 상태 \nconst emailRef =useRef<HTMLInputElement |null>(null);\n// state: 패스워드 요소 참조 상태 \nconst passwordRef =useRef<HTMLInputElement |null>(null);\n// state: 이메일 상태 \nconst[email,setEmail]=useState<string>('');\n// state: 패스워드 상태 \nconst[password,setPassword]=useState<string>('');\n// state: 패스워드 타입 상태 (보안)\nconst[passwordType,setPasswordType]=useState<'text'|'password'>('password');\n// state: 패스워드 버튼 아이콘 상태 \nconst[passwordButtonIcon,setPasswordButtonIcon] = useState<'eye-light-off-icon'|'eye-light-on-icon'>('eye-light-off-icon');\n\n// state: 에러 상태 \nconst[error,setError]=useState<boolean>(false);\n// function: sign in response 처리 함수 \n\nconst signInResponse=(responseBody:SignInResponseDto | ResponseDto|null)=>{\n  if(!responseBody){\n    alert('네트워크 이상입니다.');\n    return;\n  }\n  const{code}=responseBody;\n  if(code==='DBE') alert('데이터베이스 오류 입니다.');\n  if(code==='SF'||code==='VF') setError(true) ;\n  if(code !=='SU') return;\n\n  const {token, expirationTime}=responseBody as SignInResponseDto;\n  const now= new Date().getTime();\n  const expires=new Date(now + expirationTime * 1000);\n\n  setCookie('accessToken',token,{expires,path:MAIN_PATH()});\n  navigator(MAIN_PATH());\n}\n\n// event handler: 이메일 변경 이벤트 처리 \nconst onEmailChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n    setError(false);\n    const {value}=event.target;\n\n    setEmail(value);\n}\n// event handler: 비밀번호 변경 이벤트 처리 \nconst onPasswordChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  setError(false);\n  const {value}=event.target;\n\n  setPassword(value);\n}\n\n\n\n// event handler: 로그인 버튼 클릭 이벤트 처리 \nconst onSignInButtonClickHandler=()=>{\n\n    const requestBody:SignInRequestDto={email,password};\n    SignInRequest(requestBody).then(signInResponse);\n}\n// event handler: 회원가입 버튼 클릭 이벤트 처리 \nconst onSignUpButtonClickHandler=()=>{\n  setView('sign-up');\n}\n\n// event handler: 패스워드 버튼 클릭 이벤트 처리 \nconst onPasswordButtonClickHandler=()=>{\n  \n  if(passwordType==='text'){\n    setPasswordType('password');\n    setPasswordButtonIcon('eye-light-off-icon');\n\n  }\n  else{\n    setPasswordType('text');\n    setPasswordButtonIcon('eye-light-on-icon');\n  }\n}\n};\n// event handler: 이메일 인풋 키 다운 이벤트 처리 \nconst onEmailKeyDownHandler=(event: KeyboardEvent<HTMLInputElement>)=>{\n  \n  if(event.key !=='Enter')return;\n  if(!passwordRef.current) return;\n  passwordRef.current.focus();\n\n}\n\n\n// event handler: 패스워드 인풋 키 다운 이벤트 처리 \nconst onPasswordKeyDownHandler=(event: KeyboardEvent<HTMLInputElement>)=>{\n  \n  if(event.key !=='Enter')return;\n  onSignInButtonClickHandler();\n\n}\n\n// render: sign in card 컴포넌트 렌더링 \n\n  return(\n\n\n<div className='auth-card' >\n\n  <div className='auth-card-box'>\n    \n\n\n                <div className='auth-card-top'>\n                                <div className='auth-card-title-box'>\n                                <div className='auth-card-title'>{'로그인'}</div>\n                                </div>\n                                <InputBox ref={emailRef} label='이메일 주소' type='text' placeholder='이메일 주소를 입력해주세요 ' error={error} value={email} onChange={onEmailChangeHandler}  onKeyDown={onEmailKeyDownHandler}/>\n                                <InputBox ref={passwordRef} label='패스워드'type={passwordType} placeholder='비밀번호를 입력해주세요 ' error={error} value={password} onChange={onPasswordChangeHandler}  icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler}/>\n\n                </div>\n                \n                <div className='auth-card-bottom'>\n                                { error &&\n                                <div className='auth-sign-in-error-box'>\n                                                    <div className='auth-sign-in-error-message'>{'이메일 주소 또는 비밀번호를 잘못 입력했습니다\\n입력하신 내용을 다시 확인해주세요.'}</div>\n                                </div>\n                                }\n                                <div className='black-large-full-button'onClick={onSignInButtonClickHandler}>{'로그인'}</div>\n                                <div className='auth-description-box'>\n                                     <div className='auth-description'>{'신규 사용자이신가요?'}<span className='auth-description-link' onClick={onSignUpButtonClickHandler}>{'회원가입'}</span></div>\n                                </div>\n\n\n                </div>\n  \n\n\n\n  </div>\n\n</div>\n  );\n};\n\n\n\n\n\n\n// component: sign up card 컴포넌트 \nconst SignUpCard=()=>{\n// state: 이메일 요소 참조 상태 \nconst emailRef =useRef<HTMLInputElement |null>(null);\n// state: 패스워드 요소 참조 상태 \nconst passwordRef =useRef<HTMLInputElement |null>(null);\n// state: 패스워드 확인 요소 참조 상태 \nconst passwordChekRef =useRef<HTMLInputElement |null>(null);\n// state: 페이지 번호 상태 \nconst[page,setPage]=useState<1|2>(1);\n// state: 이메일 상태 \nconst[email,setEmail]=useState<string>('');\n// state: 패스워드 상태 \nconst[password,setPassword]=useState<string>('');\n// state: 패스워드 확인 상태 \nconst[passwordChek,setPasswordChek]=useState<string>('');\n// state: 패스워드 타입 상태 (보안)\nconst[passwordType,setPasswordType]=useState<'text'|'password'>('password');\n// state: 패스워드 확인 타입 상태 \nconst[passwordChekType,setPasswordChekType]=useState<'text'|'password'>('password');\n\n// state: 이메일 에러 상태 \nconst[isEmailError,setEmailError]=useState<boolean>(false);\n// state: 패스워드 에러 상태 \nconst[isPasswordError,setPasswordError]=useState<boolean>(false);\n// state: 패스워드 확인 에러 상태 \nconst[isPasswordChekError,setPasswordChekError]=useState<boolean>(false);\n// state: 이메일 에러 메세지 상태 \nconst[emailErrorMessage,setEmailErrorMessage]=useState<string>('');\n// state: 비밀번호 에러 메세지 상태 \nconst[passwordErrorMessage,setpasswordErrorMessage]=useState<string>('');\n// state: 비밀번호 확인 에러 메세지 상태 \nconst[passwordChekErrorMessage,setPasswordCheckErrorMessage]=useState<string>('');\n// state: 패스워드 버튼 아이콘 상태 \nconst[passwordButtonIcon,setPasswordButtonIcon] = useState<'eye-light-off-icon'|'eye-light-on-icon'>('eye-light-off-icon');\n// state: 패스워드 확인 버튼 아이콘 상태 \nconst[passwordChekButtonIcon,setPasswordChekButtonIcon] = useState<'eye-light-off-icon'|'eye-light-on-icon'>('eye-light-off-icon');\n// event handler: 이메일 변경 이벤트 처리 \nconst onEmailChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  const {value}=event.target;\n\n  setEmail(value);\n}\n\n// event handler: 비밀번호 변경 이벤트 처리 \nconst onPasswordChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  \n  const {value}=event.target;\n\n  setPassword(value);\n}\n// event handler: 비밀번호 변경 이벤트 처리 \nconst onPasswordChekChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  \n  const {value}=event.target;\n\n  setPasswordChek(value);\n}\n// event handler: 패스워드 버튼 클릭 이벤트 처리 \nconst onPasswordButtonClickHandler=()=>{\n  if(passwordButtonIcon==='eye-light-off-icon'){\n    setPasswordButtonIcon('eye-light-on-icon');\n    setPasswordType('text');\n  }\n  else{\n    setPasswordButtonIcon('eye-light-off-icon');\n    setPasswordType('password');\n  }\n }\n// event handler: 패스워드 확인 버튼 클릭 이벤트 처리 \nconst onPasswordChekButtonClickHandler=()=>{\n  if(passwordButtonIcon==='eye-light-off-icon'){\n    setPasswordChekButtonIcon('eye-light-on-icon');\n    setPasswordChekType('text');\n  }\n  else{\n    setPasswordChekButtonIcon('eye-light-off-icon');\n    setPasswordChekType('password');\n  }  \n\n// event handler: 다음 단계 버튼 클릭 이벤트 처리 \nconst onNextButtonClickHandler=()=>{\n  const emailPattern=/^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n  const isEmailPattern=emailPattern.test(email);\n  if(!email){\n    setEmailError(true);\n    setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.')\n  }\n\n  const isChekedPassword=password.trim().length>=8;\n  if(!isChekedPassword){\n    setPasswordError(true);\n    setpasswordErrorMessage('비밀번호를 8자리 이상 입력해주세요.');\n  }\n  const isEqualPassword=password===passwordChek;\n  if(!isEqualPassword){\n    setPasswordChekError(true);\n    setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다');\n  }\n  if(!email||!isChekedPassword||!isEqualPassword)return;\n    setPage(2);\n}\n\n// event handler: 이메일 키 다운 이벤트 처리 \n\nconst  onEmailKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n  if(!passwordRef.current)return;\n  passwordRef.current.focus();\n\n}\n\n// event handler: 비밀번호 키 다운 이벤트 처리 \n\nconst  onPasswordKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n  if(!passwordChekRef.current)return;\n  passwordChekRef.current.focus();\n  \n}\n\n// event handler: 비밀번호 확인 키 다운 이벤트 처리 \n\nconst  onPasswordChekKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n  onNextButtonClickHandler();\n  \n}\n\n\n// render: sign up card 컴포넌트 렌더링 \n  return(\n    <div className='auth-card'>\n\n      <div className='auth-card-box'>\n\n\n\n                      <div className='auth-card-top'>\n                          \n                         <div className='auth-card-title-box'>\n                              <div className='auth-card-title'>{'회원가입'}</div>\n                              <div className='auth-card-page'>{`${page}/page`}</div>\n                         </div>\n                         <InputBox ref={emailRef} label='이메일 주소*' type='text' placeholder='이메일 주소를 입력해 주세요.' value={email} onChange={onEmailChangeHandler} error={isEmailError} message={emailErrorMessage} onKeyDown={onEmailKeyDownHandler}/>\n                         <InputBox ref={passwordRef} label='비밀번호*' type={passwordType} placeholder='비밀번호를 입력해 주세요.' value={password} onChange={onPasswordChangeHandler} error={isPasswordError} message={passwordErrorMessage} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler}/>\n                         <InputBox ref={passwordChekRef} label='비밀번호 확인*'type={passwordChekType} placeholder='비밀번호를 다시 입력해 주세요.'value={passwordChek} onChange={onPasswordChekChangeHandler} error={isPasswordChekError} message={passwordChekErrorMessage} icon={passwordChekButtonIcon} onButtonClick={onPasswordChekButtonClickHandler} onKeyDown={onPasswordChekKeyDownHandler}/>\n                      </div>\n\n\n\n\n\n                      <div className='auth-card-bottom'>\n                           <div className='black-large-full-button' onClick={onNextButtonClickHandler} >{'다음단계'}</div>\n                           <div className='auth-description-box'>\n                           <div className='auth-description'>{'이미 계정이 있으신가요?'}<span className='auth-description-link' >{'로그인'}</span></div>\n                           </div>   \n                      </div>\n\n      </div>\n      \n    </div>\n  );\n};\n\n// render: 인증화면 컴포넌트 렌더링 \n  return (\n    <div id='auth-wrapper'>\n      <div className='auth-container'>\n                <div className='auth-jumbotron-box'>\n                        <div className='auth-jumbotron-contents'>\n                                <div className='auth-logo-icon'></div>\n                                <div className='auth-jumbotron-text-box'>\n                                        <div className='auth-jumbotron-text'>{'환영합니다.'}</div>\n                                        <div className='auth-jumbotron-text'>{'김채원 ❤️ 블로그'}</div>\n                                </div>\n                        </div>\n                </div>\n                {view=='sign-in'&&<SignInCard/>}\n                {view=='sign-up'&&<SignUpCard/>}\n      </div>\n              \n    </div>\n  )\n\n  };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}