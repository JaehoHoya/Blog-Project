{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Views/Authentication/index.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './style.css';\nimport InputBox from '../../Components/InputBox/Index';\nimport { SignInRequest } from '../../Apis';\nimport { useCookies } from 'react-cookie';\nimport { MAIN_PATH } from '../../Constants';\nimport { useNavigate } from 'react-router-dom';\n\n// component: 인증화면 컴포넌트 \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // state: 화면 상태 (로그인,회원가입에 따른) \n  const [view, setView] = useState('sign-in');\n  // state: 쿠키 상태 \n  const [cookies, setCookie] = useCookies();\n  // function: 네비게이트 함수 \n  const navigator = useNavigate();\n\n  // component: sign in card 컴포넌트 \n  const SignInCard = () => {\n    _s();\n    // state: 이메일 요소 참조 상태 \n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 \n    const passwordRef = useRef(null);\n    // state: 이메일 상태 \n    const [email, setEmail] = useState('');\n    // state: 패스워드 상태 \n    const [password, setPassword] = useState('');\n    // state: 패스워드 타입 상태 (보안)\n    const [passwordType, setPasswordType] = useState('password');\n    // state: 패스워드 버튼 아이콘 상태 \n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n\n    // state: 에러 상태 \n    const [error, setError] = useState(false);\n    // function: sign in response 처리 함수 \n\n    const signInResponse = responseBody => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다.');\n        return;\n      }\n      const {\n        code\n      } = responseBody;\n      if (code === 'DBE') alert('데이터베이스 오류 입니다.');\n      if (code === 'SF' || code === 'VF') setError(true);\n      if (code !== 'SU') return;\n      const {\n        token,\n        expirationTime\n      } = responseBody;\n      const now = new Date().getTime();\n      const expires = new Date(now + expirationTime * 1000);\n      setCookie('accessToken', token, {\n        expires,\n        path: MAIN_PATH()\n      });\n      navigator(MAIN_PATH());\n    };\n\n    // event handler: 이메일 변경 이벤트 처리 \n    const onEmailChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n    // event handler: 비밀번호 변경 이벤트 처리 \n    const onPasswordChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    // event handler: 로그인 버튼 클릭 이벤트 처리 \n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      SignInRequest(requestBody).then(signInResponse);\n    };\n    // event handler: 회원가입 버튼 클릭 이벤트 처리 \n    const onSignUpButtonClickHandler = () => {\n      setView('sign-up');\n    };\n\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 \n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setPasswordButtonIcon('eye-light-off-icon');\n      } else {\n        setPasswordType('text');\n        setPasswordButtonIcon('eye-light-on-icon');\n      }\n    };\n\n    // event handler: 이메일 인풋 키 다운 이벤트 처리 \n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n\n    // event handler: 패스워드 인풋 키 다운 이벤트 처리 \n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onSignInButtonClickHandler();\n    };\n\n    // render: sign in card 컴포넌트 렌더링 \n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '로그인'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 \",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandler,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 \",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandler,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: '이메일 주소 또는 비밀번호를 잘못 입력했습니다\\n입력하신 내용을 다시 확인해주세요.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: '로그인'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['신규 사용자이신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignUpButtonClickHandler,\n                children: '회원가입'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 1\n    }, this);\n  };\n\n  // component: sign up card 컴포넌트 \n  _s(SignInCard, \"Bo/zCzGeFNz49Gq3q0GgtlvH5GE=\");\n  const SignUpCard = () => {\n    _s2();\n    // state: 이메일 요소 참조 상태 \n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 \n    const passwordRef = useRef(null);\n    // state: 패스워드 확인 요소 참조 상태 \n    const passwordCheckRef = useRef(null);\n\n    // state: 닉네임 요소 참조 상태 \n    const nicknameRef = useRef(null);\n    // state: 전화번호 요소 참조 상태 \n    const telNumberRef = useRef(null);\n    // state: 주소 요소 참조 상태 \n    const addressRef = useRef(null);\n    // state:상세 주소 요소 참조 상태 \n    const addressDetailRef = useRef(null);\n\n    // state: 페이지 번호 상태 \n    const [page, setPage] = useState(2);\n    // state: 이메일 상태 \n    const [email, setEmail] = useState('');\n    // state: 패스워드 상태 \n    const [password, setPassword] = useState('');\n    // state: 패스워드 확인 상태 \n    const [passwordCheck, setPasswordCheck] = useState('');\n\n    // state: 닉네임 상태 \n    const [nickname, setNickname] = useState('');\n    // state: 핸드폰 번호 상태 \n    const [telNumber, setTelNumber] = useState('');\n    // state: 주소 상태 \n    const [address, setAdress] = useState('');\n    // state: 상세 주소 상태 \n    const [addressDetail, setAddressDetail] = useState('');\n    // state: 개인정보 동의 상태 \n    const [agreedPersonal, setAgreedPersonal] = useState(false);\n\n    // state: 패스워드 타입 상태 (보안)\n    const [passwordType, setPasswordType] = useState('password');\n    // state: 패스워드 확인 타입 상태 \n    const [passwordCheckType, setPasswordCheckType] = useState('password');\n\n    // state: 이메일 에러 상태 \n    const [isEmailError, setEmailError] = useState(false);\n    // state: 패스워드 에러 상태 \n    const [isPasswordError, setPasswordError] = useState(false);\n    // state: 패스워드 확인 에러 상태 \n    const [isPasswordCheckError, setPasswordCheckError] = useState(false);\n\n    // state: 닉네임 에러 상태 \n    const [isNicknameError, setNicknameError] = useState(false);\n    // state: 핸드폰 번호 에러 상태 \n    const [isTelNumberError, setTelNumberError] = useState(false);\n    // state: 주소  에러 상태 \n    const [isAddressError, setAddressError] = useState(false);\n    // state: 개인정보 동의 에러 상태 \n    const [isAgreedPersonalError, setAgreedPersonalError] = useState(false);\n\n    // state: 이메일 에러 메세지 상태 \n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\n    // state: 비밀번호 에러 메세지 상태 \n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n    // state: 비밀번호 확인 에러 메세지 상태 \n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState('');\n\n    // state: 닉네임 에러 메세지 상태 \n    const [nicknameErrorMessage, setNicknameErrorMessage] = useState('');\n    // state: 휴대폰 번호 에러 메세지 상태 \n    const [telNumberErrorMessage, setTelNumberErrorMessage] = useState('');\n    // state: 주소 에러 메세지 상태 \n    const [addressErrorMessage, setAddressErrorMessage] = useState('');\n\n    // state: 패스워드 버튼 아이콘 상태 \n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    // state: 패스워드 확인 버튼 아이콘 상태 \n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState('eye-light-off-icon');\n    // event handler: 이메일 변경 이벤트 처리 \n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n      setEmailError(false);\n      setEmailErrorMessage('');\n    };\n\n    // event handler: 비밀번호 변경 이벤트 처리 \n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n      setPasswordError(false);\n      setPasswordErrorMessage('');\n    };\n    // event handler: 비밀번호 확인 변경 이벤트 처리 \n    const onPasswordChekChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordCheck(value);\n      setPasswordCheckError(false);\n      setPasswordCheckErrorMessage('');\n    };\n    // event handler: 닉네임 변경 이벤트 처리 \n    const onNicknameChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setNickname(value);\n      setNicknameError(false);\n      setNicknameErrorMessage('');\n    };\n    // event handler: 휴대폰 번호 확인 변경 이벤트 처리 \n    const onTelNumberChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setTelNumber(value);\n      setTelNumberError(false);\n      setTelNumberErrorMessage('');\n    };\n    // event handler: 주소 변경 이벤트 처리 \n    const onAddressChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAdress(value);\n      setAddressError(false);\n      setAddressErrorMessage('');\n    };\n    // event handler: 상세 주소 변경 이벤트 처리 \n    const onAddressDetialChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddressDetail(value);\n      setAddressDetailError(false);\n      setAddressDetailErrorMessage('');\n    };\n    // event handler: 개인정보 동의 채크박스 클릭 이벤트 처리 \n    const onAgreedPersonalClickHandler = () => {};\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 \n    const onPasswordButtonClickHandler = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordButtonIcon('eye-light-on-icon');\n        setPasswordType('text');\n      } else {\n        setPasswordButtonIcon('eye-light-off-icon');\n        setPasswordType('password');\n      }\n    };\n    // event handler: 패스워드 확인 버튼 클릭 이벤트 처리 \n    const onPasswordChekButtonClickHandler = () => {\n      if (passwordChekButtonIcon === 'eye-light-off-icon') {\n        setPasswordChekButtonIcon('eye-light-on-icon');\n        setPasswordChekType('text');\n      } else {\n        setPasswordChekButtonIcon('eye-light-off-icon');\n        setPasswordChekType('password');\n      }\n    };\n    // event handler: 주소 버튼 클릭 이벤트 처리 \n    const onAddressButtonClickHandler = () => {};\n    // event handler: 다음 단계 버튼 클릭 이벤트 처리 \n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isChekedPassword = password.trim().length >= 8;\n      if (!isChekedPassword) {\n        setPasswordError(true);\n        setpasswordErrorMessage('비밀번호를 8자리 이상 입력해주세요.');\n      }\n      const isEqualPassword = password === passwordChek;\n      if (!isEqualPassword) {\n        setPasswordChekError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다');\n      }\n      if (!isEmailPattern || !isChekedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n\n    // event handler: 회원가입 클릭 이벤트 처리 \n    const onSinUpButtonClickHandler = () => {};\n\n    // event handler: 로그인 링크 클릭 이벤트 처리 \n\n    const onSignLinkClickHandler = () => {\n      setView('sign-in');\n    };\n    // event handler: 이메일 키 다운 이벤트 처리 \n\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n\n    // event handler: 비밀번호 키 다운 이벤트 처리 \n\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordChekRef.current) return;\n      passwordChekRef.current.focus();\n    };\n\n    // event handler: 비밀번호 확인 키 다운 이벤트 처리 \n\n    const onPasswordChekKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onNextButtonClickHandler();\n    };\n\n    // event handler: 닉네임 키 다운 이벤트 처리 \n\n    const onNciknameKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n    };\n\n    // event handler: 핸드폰 번호 키 다운 이벤트 처리 \n\n    const onTelNumberKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n    };\n\n    // event handler: 주소 키 다운 이벤트 처리 \n\n    const onAddressKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n    };\n\n    // event handler: 상세주소 키 다운 이벤트 처리 \n\n    const onAddressDetailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n    };\n\n    // render: sign up card 컴포넌트 렌더링 \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 26\n          }, this), page === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: emailRef,\n              label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n              value: email,\n              onChange: onEmailChangeHandler,\n              error: isEmailError,\n              message: emailErrorMessage,\n              onKeyDown: onEmailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n              type: passwordType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n              value: password,\n              onChange: onPasswordChangeHandler,\n              error: isPasswordError,\n              message: passwordErrorMessage,\n              icon: passwordButtonIcon,\n              onButtonClick: onPasswordButtonClickHandler,\n              onKeyDown: onPasswordKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordChekRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n              type: passwordChekType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n              value: passwordChek,\n              onChange: onPasswordChekChangeHandler,\n              error: isPasswordChekError,\n              message: passwordChekErrorMessage,\n              icon: passwordChekButtonIcon,\n              onButtonClick: onPasswordChekButtonClickHandler,\n              onKeyDown: onPasswordChekKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: nicknameRef,\n              label: \"\\uB2C9\\uB124\\uC784*\",\n              type: \"text\",\n              placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: nickname,\n              onChange: onNicknameChangeHandler,\n              error: isNicknameError,\n              message: nicknameErrorMessage,\n              onKeyDown: onNciknameKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: telNumberRef,\n              label: \"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638*\",\n              type: \"text\",\n              placeholder: \"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: telNumber,\n              onChange: onTelNumberChangeHandler,\n              error: isTelNumberError,\n              message: telNumberErrorMessage,\n              onKeyDown: onTelNumberKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressRef,\n              label: \"\\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uCC3E\\uAE30\",\n              value: address,\n              onChange: onAddressChangeHandler,\n              error: isAddressError,\n              message: addressErrorMessage,\n              icon: \"expand-right-light-icon\",\n              onButtonClick: onAddressButtonClickHandler,\n              onKeyDown: onAddressKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressDetailRef,\n              label: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\",\n              type: \"text\",\n              placeholder: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: addressDetail,\n              onChange: onAddressDetialChangeHandler,\n              error: false,\n              onKeyDown: onAddressDetailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: '다음단계'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 25\n          }, this), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-consent-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-check-box\",\n                onClick: onAgreedPersonalClickHandler,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `Icon ${agreedPersonal ? 'check-round-fill-icon' : 'check-ring-light-icon'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isAgreedPersonalError ? 'auth-consent-title-error' : 'auth-consent-title',\n                children: '개인정보 동의'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-consent-link\",\n                children: '더보기 >'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"black-large-full-button\",\n              onClick: onSinUpButtonClickHandler,\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['이미 계정이 있으신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignLinkClickHandler,\n                children: '로그인'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 79\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 5\n    }, this);\n  };\n\n  // render: 인증화면 컴포넌트 렌더링 \n  _s2(SignUpCard, \"ndc5rxYWO/vYnp6ReWAlj83TJs4=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: '환영합니다.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: '김채원 ❤️ 블로그'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }, this), view == 'sign-in' && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 35\n      }, this), view == 'sign-up' && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 500,\n    columnNumber: 5\n  }, this);\n}\n_s3(Authentication, \"2l4yDcXNynVGZWMSBrSOZv4e/yo=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","useState","useRef","InputBox","SignInRequest","useCookies","MAIN_PATH","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Authentication","_s3","_s","$RefreshSig$","_s2","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","onSignUpButtonClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","nicknameRef","telNumberRef","addressRef","addressDetailRef","page","setPage","passwordCheck","setPasswordCheck","nickname","setNickname","telNumber","setTelNumber","address","setAdress","addressDetail","setAddressDetail","agreedPersonal","setAgreedPersonal","passwordCheckType","setPasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","isNicknameError","setNicknameError","isTelNumberError","setTelNumberError","isAddressError","setAddressError","isAgreedPersonalError","setAgreedPersonalError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","nicknameErrorMessage","setNicknameErrorMessage","telNumberErrorMessage","setTelNumberErrorMessage","addressErrorMessage","setAddressErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","onPasswordChekChangeHandler","onNicknameChangeHandler","onTelNumberChangeHandler","onAddressChangeHandler","onAddressDetialChangeHandler","setAddressDetailError","setAddressDetailErrorMessage","onAgreedPersonalClickHandler","onPasswordChekButtonClickHandler","passwordChekButtonIcon","setPasswordChekButtonIcon","setPasswordChekType","onAddressButtonClickHandler","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isChekedPassword","trim","length","setpasswordErrorMessage","isEqualPassword","passwordChek","setPasswordChekError","onSinUpButtonClickHandler","onSignLinkClickHandler","passwordChekRef","onPasswordChekKeyDownHandler","onNciknameKeyDownHandler","onTelNumberKeyDownHandler","onAddressKeyDownHandler","onAddressDetailKeyDownHandler","message","passwordChekType","isPasswordChekError","passwordChekErrorMessage","id","_c","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Views/Authentication/index.tsx"],"sourcesContent":["import React, { useState ,KeyboardEvent, useRef, ChangeEvent} from 'react'\nimport './style.css';\n\nimport InputBox from '../../Components/InputBox/Index';\nimport { SignInRequestDto } from '../../Apis/Request/Auth';\nimport { SignInRequest } from '../../Apis';\nimport { SignInResponseDto } from '../../Apis/Response/Auth';\nimport { ResponseDto } from '../../Apis/Response';\nimport { useCookies } from 'react-cookie';\nimport { MAIN_PATH } from '../../Constants';\nimport { useNavigate } from 'react-router-dom';\n\n\n// component: 인증화면 컴포넌트 \nexport default function Authentication() {\n\n// state: 화면 상태 (로그인,회원가입에 따른) \nconst[view,setView]=useState<'sign-in'|'sign-up'>('sign-in');\n// state: 쿠키 상태 \nconst [cookies, setCookie]=useCookies();\n// function: 네비게이트 함수 \nconst navigator=useNavigate();\n\n// component: sign in card 컴포넌트 \nconst SignInCard=()=>{\n// state: 이메일 요소 참조 상태 \nconst emailRef =useRef<HTMLInputElement |null>(null);\n// state: 패스워드 요소 참조 상태 \nconst passwordRef =useRef<HTMLInputElement |null>(null);\n// state: 이메일 상태 \nconst[email,setEmail]=useState<string>('');\n// state: 패스워드 상태 \nconst[password,setPassword]=useState<string>('');\n// state: 패스워드 타입 상태 (보안)\nconst[passwordType,setPasswordType]=useState<'text'|'password'>('password');\n// state: 패스워드 버튼 아이콘 상태 \nconst[passwordButtonIcon,setPasswordButtonIcon] = useState<'eye-light-off-icon'|'eye-light-on-icon'>('eye-light-off-icon');\n\n// state: 에러 상태 \nconst[error,setError]=useState<boolean>(false);\n// function: sign in response 처리 함수 \n\nconst signInResponse=(responseBody:SignInResponseDto | ResponseDto|null)=>{\n  if(!responseBody){\n    alert('네트워크 이상입니다.');\n    return;\n  }\n  const{code}=responseBody;\n  if(code==='DBE') alert('데이터베이스 오류 입니다.');\n  if(code==='SF'||code==='VF') setError(true) ;\n  if(code !=='SU') return;\n\n  const {token, expirationTime}=responseBody as SignInResponseDto;\n  const now= new Date().getTime();\n  const expires=new Date(now + expirationTime * 1000);\n\n  setCookie('accessToken',token,{expires,path:MAIN_PATH()});\n  navigator(MAIN_PATH());\n}\n\n// event handler: 이메일 변경 이벤트 처리 \nconst onEmailChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n    setError(false);\n    const {value}=event.target;\n\n    setEmail(value);\n}\n// event handler: 비밀번호 변경 이벤트 처리 \nconst onPasswordChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  setError(false);\n  const {value}=event.target;\n\n  setPassword(value);\n}\n\n\n\n// event handler: 로그인 버튼 클릭 이벤트 처리 \nconst onSignInButtonClickHandler=()=>{\n\n    const requestBody:SignInRequestDto={email,password};\n    SignInRequest(requestBody).then(signInResponse);\n}\n// event handler: 회원가입 버튼 클릭 이벤트 처리 \nconst onSignUpButtonClickHandler=()=>{\n  setView('sign-up');\n}\n\n// event handler: 패스워드 버튼 클릭 이벤트 처리 \nconst onPasswordButtonClickHandler=()=>{\n  \n  if(passwordType==='text'){\n    setPasswordType('password');\n    setPasswordButtonIcon('eye-light-off-icon');\n\n  }\n  else{\n    setPasswordType('text');\n    setPasswordButtonIcon('eye-light-on-icon');\n  }\n}\n\n// event handler: 이메일 인풋 키 다운 이벤트 처리 \nconst onEmailKeyDownHandler=(event: KeyboardEvent<HTMLInputElement>)=>{\n  \n  if(event.key !=='Enter')return;\n  if(!passwordRef.current) return;\n  passwordRef.current.focus();\n\n}\n\n\n// event handler: 패스워드 인풋 키 다운 이벤트 처리 \nconst onPasswordKeyDownHandler=(event: KeyboardEvent<HTMLInputElement>)=>{\n  \n  if(event.key !=='Enter')return;\n  onSignInButtonClickHandler();\n\n}\n\n// render: sign in card 컴포넌트 렌더링 \n\n  return(\n\n\n<div className='auth-card' >\n\n  <div className='auth-card-box'>\n    \n\n\n                <div className='auth-card-top'>\n                                <div className='auth-card-title-box'>\n                                <div className='auth-card-title'>{'로그인'}</div>\n                                </div>\n                                <InputBox ref={emailRef} label='이메일 주소' type='text' placeholder='이메일 주소를 입력해주세요 ' error={error} value={email} onChange={onEmailChangeHandler}  onKeyDown={onEmailKeyDownHandler}/>\n                                <InputBox ref={passwordRef} label='패스워드'type={passwordType} placeholder='비밀번호를 입력해주세요 ' error={error} value={password} onChange={onPasswordChangeHandler}  icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler}/>\n\n                </div>\n                \n                <div className='auth-card-bottom'>\n                                { error &&\n                                <div className='auth-sign-in-error-box'>\n                                                    <div className='auth-sign-in-error-message'>{'이메일 주소 또는 비밀번호를 잘못 입력했습니다\\n입력하신 내용을 다시 확인해주세요.'}</div>\n                                </div>\n                                }\n                                <div className='black-large-full-button'onClick={onSignInButtonClickHandler}>{'로그인'}</div>\n                                <div className='auth-description-box'>\n                                     <div className='auth-description'>{'신규 사용자이신가요?'}<span className='auth-description-link' onClick={onSignUpButtonClickHandler}>{'회원가입'}</span></div>\n                                </div>\n\n\n                </div>\n  \n\n\n\n  </div>\n\n</div>\n  );\n};\n\n\n\n\n\n\n// component: sign up card 컴포넌트 \nconst SignUpCard=()=>{\n// state: 이메일 요소 참조 상태 \nconst emailRef =useRef<HTMLInputElement |null>(null);\n// state: 패스워드 요소 참조 상태 \nconst passwordRef =useRef<HTMLInputElement |null>(null);\n// state: 패스워드 확인 요소 참조 상태 \nconst passwordCheckRef =useRef<HTMLInputElement |null>(null);\n\n// state: 닉네임 요소 참조 상태 \nconst nicknameRef =useRef<HTMLInputElement |null>(null);\n// state: 전화번호 요소 참조 상태 \nconst telNumberRef =useRef<HTMLInputElement |null>(null);\n// state: 주소 요소 참조 상태 \nconst addressRef =useRef<HTMLInputElement |null>(null);\n// state:상세 주소 요소 참조 상태 \nconst addressDetailRef =useRef<HTMLInputElement |null>(null);\n\n// state: 페이지 번호 상태 \nconst[page,setPage]=useState<1|2>(2);\n// state: 이메일 상태 \nconst[email,setEmail]=useState<string>('');\n// state: 패스워드 상태 \nconst[password,setPassword]=useState<string>('');\n// state: 패스워드 확인 상태 \nconst[passwordCheck,setPasswordCheck]=useState<string>('');\n\n// state: 닉네임 상태 \nconst[nickname,setNickname]=useState<string>('');\n// state: 핸드폰 번호 상태 \nconst[telNumber,setTelNumber]=useState<string>('');\n// state: 주소 상태 \nconst[address,setAdress]=useState<string>('');\n// state: 상세 주소 상태 \nconst[addressDetail,setAddressDetail]=useState<string>('');\n// state: 개인정보 동의 상태 \nconst[agreedPersonal,setAgreedPersonal]=useState<boolean>(false);\n\n// state: 패스워드 타입 상태 (보안)\nconst[passwordType,setPasswordType]=useState<'text'|'password'>('password');\n// state: 패스워드 확인 타입 상태 \nconst[passwordCheckType,setPasswordCheckType]=useState<'text'|'password'>('password');\n\n// state: 이메일 에러 상태 \nconst[isEmailError,setEmailError]=useState<boolean>(false);\n// state: 패스워드 에러 상태 \nconst[isPasswordError,setPasswordError]=useState<boolean>(false);\n// state: 패스워드 확인 에러 상태 \nconst[isPasswordCheckError,setPasswordCheckError]=useState<boolean>(false);\n\n// state: 닉네임 에러 상태 \nconst[isNicknameError,setNicknameError]=useState<boolean>(false);\n// state: 핸드폰 번호 에러 상태 \nconst[isTelNumberError,setTelNumberError]=useState<boolean>(false);\n// state: 주소  에러 상태 \nconst[isAddressError,setAddressError]=useState<boolean>(false);\n// state: 개인정보 동의 에러 상태 \nconst[isAgreedPersonalError,setAgreedPersonalError]=useState<boolean>(false);\n\n\n// state: 이메일 에러 메세지 상태 \nconst[emailErrorMessage,setEmailErrorMessage]=useState<string>('');\n// state: 비밀번호 에러 메세지 상태 \nconst[passwordErrorMessage,setPasswordErrorMessage]=useState<string>('');\n// state: 비밀번호 확인 에러 메세지 상태 \nconst[passwordCheckErrorMessage,setPasswordCheckErrorMessage]=useState<string>('');\n\n\n\n// state: 닉네임 에러 메세지 상태 \nconst[nicknameErrorMessage,setNicknameErrorMessage]=useState<string>('');\n// state: 휴대폰 번호 에러 메세지 상태 \nconst[telNumberErrorMessage,setTelNumberErrorMessage]=useState<string>('');\n// state: 주소 에러 메세지 상태 \nconst[addressErrorMessage,setAddressErrorMessage]=useState<string>('');\n\n\n\n// state: 패스워드 버튼 아이콘 상태 \nconst[passwordButtonIcon,setPasswordButtonIcon] = useState<'eye-light-off-icon'|'eye-light-on-icon'>('eye-light-off-icon');\n// state: 패스워드 확인 버튼 아이콘 상태 \nconst[passwordCheckButtonIcon,setPasswordCheckButtonIcon] = useState<'eye-light-off-icon'|'eye-light-on-icon'>('eye-light-off-icon');\n// event handler: 이메일 변경 이벤트 처리 \nconst onEmailChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  const {value}=event.target;\n\n  setEmail(value);\n  setEmailError(false);\n  setEmailErrorMessage('');\n}\n\n// event handler: 비밀번호 변경 이벤트 처리 \nconst onPasswordChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  \n  const {value}=event.target;\n  setPassword(value);\n  setPasswordError(false);\n  setPasswordErrorMessage('');\n}\n// event handler: 비밀번호 확인 변경 이벤트 처리 \nconst onPasswordChekChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  \n  const {value}=event.target;\n  setPasswordCheck(value);\n  setPasswordCheckError(false);\n  setPasswordCheckErrorMessage('');\n}\n// event handler: 닉네임 변경 이벤트 처리 \nconst onNicknameChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  \n  const {value}=event.target;\n  setNickname(value);\n  setNicknameError(false);\n  setNicknameErrorMessage('');\n}\n// event handler: 휴대폰 번호 확인 변경 이벤트 처리 \nconst onTelNumberChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  \n  const {value}=event.target;\n  setTelNumber(value);\n  setTelNumberError(false);\n  setTelNumberErrorMessage('');\n}\n// event handler: 주소 변경 이벤트 처리 \nconst onAddressChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  \n  const {value}=event.target;\n  setAdress(value);\n  setAddressError(false);\n  setAddressErrorMessage('');\n}\n// event handler: 상세 주소 변경 이벤트 처리 \nconst onAddressDetialChangeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  \n  const {value}=event.target;\n  setAddressDetail(value);\n  setAddressDetailError(false);\n  setAddressDetailErrorMessage('');\n}\n// event handler: 개인정보 동의 채크박스 클릭 이벤트 처리 \nconst onAgreedPersonalClickHandler=()=>{\n\n}\n// event handler: 패스워드 버튼 클릭 이벤트 처리 \nconst onPasswordButtonClickHandler=()=>{\n  if(passwordButtonIcon==='eye-light-off-icon'){\n    setPasswordButtonIcon('eye-light-on-icon');\n    setPasswordType('text');\n  }\n  else{\n    setPasswordButtonIcon('eye-light-off-icon');\n    setPasswordType('password');\n  }\n }\n// event handler: 패스워드 확인 버튼 클릭 이벤트 처리 \nconst onPasswordChekButtonClickHandler=()=>{\n  if(passwordChekButtonIcon==='eye-light-off-icon'){\n    setPasswordChekButtonIcon('eye-light-on-icon');\n    setPasswordChekType('text');\n  }\n  else{\n    setPasswordChekButtonIcon('eye-light-off-icon');\n    setPasswordChekType('password');\n  }  \n}\n// event handler: 주소 버튼 클릭 이벤트 처리 \nconst onAddressButtonClickHandler=()=>{\n\n\n}\n// event handler: 다음 단계 버튼 클릭 이벤트 처리 \nconst onNextButtonClickHandler=()=>{\n  const emailPattern=/^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n  const isEmailPattern=emailPattern.test(email);\n  if(!isEmailPattern){\n    setEmailError(true);\n    setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.')\n  }\n\n  const isChekedPassword=password.trim().length>=8;\n  if(!isChekedPassword){\n    setPasswordError(true);\n    setpasswordErrorMessage('비밀번호를 8자리 이상 입력해주세요.');\n  }\n  const isEqualPassword=password===passwordChek;\n  if(!isEqualPassword){\n    setPasswordChekError(true);\n    setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다');\n  }\n  if(!isEmailPattern||!isChekedPassword||!isEqualPassword)return;\n    setPage(2);\n}\n\n// event handler: 회원가입 클릭 이벤트 처리 \nconst onSinUpButtonClickHandler=()=>{\n\n}\n\n// event handler: 로그인 링크 클릭 이벤트 처리 \n\nconst onSignLinkClickHandler=()=>{\n  setView('sign-in');\n}\n// event handler: 이메일 키 다운 이벤트 처리 \n\nconst  onEmailKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n  if(!passwordRef.current)return;\n  passwordRef.current.focus();\n\n}\n\n// event handler: 비밀번호 키 다운 이벤트 처리 \n\nconst  onPasswordKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n  if(!passwordChekRef.current)return;\n  passwordChekRef.current.focus();\n  \n}\n\n// event handler: 비밀번호 확인 키 다운 이벤트 처리 \n\nconst  onPasswordChekKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n  onNextButtonClickHandler();\n  \n}\n\n\n// event handler: 닉네임 키 다운 이벤트 처리 \n\nconst  onNciknameKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n\n  \n}\n\n// event handler: 핸드폰 번호 키 다운 이벤트 처리 \n\nconst  onTelNumberKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n\n  \n}\n\n// event handler: 주소 키 다운 이벤트 처리 \n\nconst  onAddressKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n  \n  \n}\n\n// event handler: 상세주소 키 다운 이벤트 처리 \n\nconst  onAddressDetailKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n  if(event.key !=='Enter')return;\n \n  \n}\n\n\n\n\n\n\n\n\n// render: sign up card 컴포넌트 렌더링 \n  return(\n    <div className='auth-card'>\n\n      <div className='auth-card-box'>\n\n\n\n                      <div className='auth-card-top'>\n                          \n                         <div className='auth-card-title-box'>\n                              <div className='auth-card-title'>{'회원가입'}</div>\n                              <div className='auth-card-page'>{`${page}/2`}</div>\n                         </div>\n                         {page ===1 &&(\n                          <>\n                         <InputBox ref={emailRef} label='이메일 주소*' type='text' placeholder='이메일 주소를 입력해 주세요.' value={email} onChange={onEmailChangeHandler} error={isEmailError} message={emailErrorMessage} onKeyDown={onEmailKeyDownHandler}/>\n                         <InputBox ref={passwordRef} label='비밀번호*' type={passwordType} placeholder='비밀번호를 입력해 주세요.' value={password} onChange={onPasswordChangeHandler} error={isPasswordError} message={passwordErrorMessage} icon={passwordButtonIcon} onButtonClick={onPasswordButtonClickHandler} onKeyDown={onPasswordKeyDownHandler}/>\n                         <InputBox ref={passwordChekRef} label='비밀번호 확인*'type={passwordChekType} placeholder='비밀번호를 다시 입력해 주세요.'value={passwordChek} onChange={onPasswordChekChangeHandler} error={isPasswordChekError} message={passwordChekErrorMessage} icon={passwordChekButtonIcon} onButtonClick={onPasswordChekButtonClickHandler} onKeyDown={onPasswordChekKeyDownHandler}/>\n                          </>\n                         )}\n                         {page ===2 &&(\n                          <>\n                        <InputBox ref={nicknameRef} label='닉네임*' type='text' placeholder='닉네임을 입력해주세요' value={nickname} onChange={onNicknameChangeHandler} error={isNicknameError} message={nicknameErrorMessage} onKeyDown={onNciknameKeyDownHandler}/>\n                        <InputBox ref={telNumberRef} label='휴대폰 번호*'type='text'placeholder='핸드폰 번호를 입력해주세요'value={telNumber} onChange={onTelNumberChangeHandler}error={isTelNumberError}message={telNumberErrorMessage}onKeyDown={onTelNumberKeyDownHandler}/>\n                        <InputBox ref={addressRef}label='주소*'type='text' placeholder='우편번호 찾기'value={address} onChange={onAddressChangeHandler}error={isAddressError} message={addressErrorMessage} icon='expand-right-light-icon' onButtonClick={onAddressButtonClickHandler} onKeyDown={onAddressKeyDownHandler}/>\n                        <InputBox ref={addressDetailRef} label='상세 주소'type='text'placeholder='상세 주소를 입력해주세요'value={addressDetail} onChange={onAddressDetialChangeHandler}error={false} onKeyDown={onAddressDetailKeyDownHandler}/>\n                          </>\n                         )}\n                      </div>\n\n                      <div className='auth-card-bottom'>\n                      {page ===1 &&(\n                        <div className='black-large-full-button' onClick={onNextButtonClickHandler} >{'다음단계'}</div>\n                      )}\n                      {page ===2 &&(\n                        <>\n                        <div className='auth-consent-box'>\n                          <div className='auth-check-box'onClick={onAgreedPersonalClickHandler}>\n                            <div className={`Icon ${agreedPersonal ? 'check-round-fill-icon':'check-ring-light-icon'}`}></div>\n                            \n                          </div>\n                          <div className={isAgreedPersonalError ?'auth-consent-title-error':'auth-consent-title'}>{'개인정보 동의'}</div>\n                          <div className='auth-consent-link'>{'더보기 >'}</div>\n                        </div>\n                        <div className='black-large-full-button' onClick={onSinUpButtonClickHandler} >{'회원가입'}</div>\n                        </>\n                      )}\n                           <div className='auth-description-box'>\n                           <div className='auth-description'>{'이미 계정이 있으신가요?'}<span className='auth-description-link' onClick={onSignLinkClickHandler}>{'로그인'}</span></div>\n                           </div>   \n                      </div>\n\n      </div>\n      \n    </div>\n  );\n};\n\n\n// render: 인증화면 컴포넌트 렌더링 \n  return (\n    <div id='auth-wrapper'>\n      <div className='auth-container'>\n                <div className='auth-jumbotron-box'>\n                        <div className='auth-jumbotron-contents'>\n                                <div className='auth-logo-icon'></div>\n                                <div className='auth-jumbotron-text-box'>\n                                        <div className='auth-jumbotron-text'>{'환영합니다.'}</div>\n                                        <div className='auth-jumbotron-text'>{'김채원 ❤️ 블로그'}</div>\n                                </div>\n                        </div>\n                </div>\n                {view=='sign-in'&&<SignInCard/>}\n                {view=='sign-up'&&<SignUpCard/>}\n      </div>\n              \n    </div>\n  )\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}