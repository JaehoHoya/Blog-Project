{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Main from './Views/Main';\nimport Authentication from './Views/Authentication';\nimport Search from './Views/Search';\nimport BoardDetail from './Views/Board/Detail';\nimport BoardWrite from './Views/Board/Write';\nimport BoardUpdate from './Views/Board/Update';\nimport Container from './Layouts/Container';\nimport { AUTH_PATH, BOARD_DETAIL_PATH, BOARD_PATH, BOARD_UPDATE_PATH, BOARD_WRITE_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from './Constants/index';\nimport { useCookies } from 'react-cookie';\nimport { useLoginUserStore } from './Stores';\nimport { getSignInUserRequest } from './Apis';\nimport { User } from './Types/Interface';\n\n// component: Application 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // state: 로그인 유저 전역 상태 \n  const {\n    setLoginUser,\n    resetLoginUser\n  } = useLoginUserStore();\n  // state: cookie 상태 \n  const [cookies, setCookie] = useCookies();\n  // function: get sign in user response 처리 함수 \n  const getSignInUserResponse = responseBody => {\n    if (!responseBody) return;\n    const {\n      code\n    } = responseBody;\n    if (code === \"AF\" || code === 'NU' || code === \"DBE\") {\n      resetLoginUser();\n      return;\n    }\n    const loginUser = {\n      ...responseBody\n    };\n    setLoginUser(loginUser);\n  };\n  // effect: accessToken cookie 값이 변경될 떄 마다 실행할 함수 \n  useEffect(() => {\n    if (!cookies.accessToken) {\n      resetLoginUser();\n      return;\n    }\n    getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse);\n  }, [cookies.accessToken]);\n  // render: Application 컴포넌트 렌더링 \n\n  // description: 메인화면 :'/' - Main\n  // description: 로그인 +회원가입 화면:'/auth' - Authentication\n  // description: 검색화면 :'/search/:searchWord' - Search\n  // description: 유저 페이지 :'user/:userEmail' - User\n  // description: 게시물 상세보기 :'/board/detail/:boardNumber' - BoardDetail\n  // description: 게시물 작성하기 :'/board/write' -BoardWrite\n  // description: 게시물 수정하기 :'/board/update/:boardNumber' -BoardUpdate\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: MAIN_PATH(),\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: AUTH_PATH(),\n        element: /*#__PURE__*/_jsxDEV(Authentication, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: SEARCH_PATH(':searchWord'),\n        element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: USER_PATH(':userEmail'),\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: BOARD_PATH(),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: BOARD_DETAIL_PATH(':boardNumber'),\n          element: /*#__PURE__*/_jsxDEV(BoardDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: BOARD_WRITE_PATH(),\n          element: /*#__PURE__*/_jsxDEV(BoardWrite, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: BOARD_UPDATE_PATH(':boardNumber'),\n          element: /*#__PURE__*/_jsxDEV(BoardUpdate, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"404 not found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ooVhoc/tWdN+n4eAiQqH0Jc2KPQ=\", false, function () {\n  return [useLoginUserStore, useCookies];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Route","Routes","Main","Authentication","Search","BoardDetail","BoardWrite","BoardUpdate","Container","AUTH_PATH","BOARD_DETAIL_PATH","BOARD_PATH","BOARD_UPDATE_PATH","BOARD_WRITE_PATH","MAIN_PATH","SEARCH_PATH","USER_PATH","useCookies","useLoginUserStore","getSignInUserRequest","User","jsxDEV","_jsxDEV","App","_s","setLoginUser","resetLoginUser","cookies","setCookie","getSignInUserResponse","responseBody","code","loginUser","accessToken","then","children","element","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Main from './Views/Main';\nimport Authentication from './Views/Authentication';\nimport Search from './Views/Search';\nimport UserP from './Views/User';\nimport BoardDetail from './Views/Board/Detail';\nimport BoardWrite from './Views/Board/Write';\nimport BoardUpdate from './Views/Board/Update';\nimport Container from './Layouts/Container';\nimport { AUTH_PATH, BOARD_DETAIL_PATH, BOARD_PATH, BOARD_UPDATE_PATH, BOARD_WRITE_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from './Constants/index';\nimport { useCookies } from 'react-cookie';\nimport { useLoginUserStore } from './Stores';\nimport { getSignInUserRequest } from './Apis';\nimport { GetSignInUserResponseDto } from './Apis/Response/User';\nimport { ResponseDto } from './Apis/Response';\nimport { User } from './Types/Interface';\n\n\n// component: Application 컴포넌트\nfunction App() {\n// state: 로그인 유저 전역 상태 \nconst {setLoginUser,resetLoginUser}=useLoginUserStore();\n// state: cookie 상태 \nconst [cookies,setCookie]=useCookies();\n// function: get sign in user response 처리 함수 \nconst getSignInUserResponse=(responseBody:GetSignInUserResponseDto |ResponseDto|null)=>{\n  if(!responseBody) return;\n  const {code}=responseBody;\n  if(code===\"AF\"||code==='NU'||code===\"DBE\"){\n    resetLoginUser();\n    return;\n  }\n  const loginUser: User={...responseBody as GetSignInUserResponseDto};\n  setLoginUser(loginUser);\n}\n// effect: accessToken cookie 값이 변경될 떄 마다 실행할 함수 \nuseEffect(()=>{\n  if(!cookies.accessToken){\n    resetLoginUser();\n    return;\n  }\n  getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse);\n},[cookies.accessToken])\n// render: Application 컴포넌트 렌더링 \n\n// description: 메인화면 :'/' - Main\n// description: 로그인 +회원가입 화면:'/auth' - Authentication\n// description: 검색화면 :'/search/:searchWord' - Search\n// description: 유저 페이지 :'user/:userEmail' - User\n// description: 게시물 상세보기 :'/board/detail/:boardNumber' - BoardDetail\n// description: 게시물 작성하기 :'/board/write' -BoardWrite\n// description: 게시물 수정하기 :'/board/update/:boardNumber' -BoardUpdate\n\n    return (\n     \n    <Routes>\n      <Route element={<Container/>}>\n        <Route path={MAIN_PATH()} element={<Main />} />\n        <Route path={AUTH_PATH()} element={<Authentication />} />\n        <Route path={SEARCH_PATH(':searchWord')} element={<Search />} />\n        <Route path={USER_PATH(':userEmail')} element={<User />} />\n        <Route path={BOARD_PATH()}>\n              <Route path={BOARD_DETAIL_PATH(':boardNumber')} element={<BoardDetail/>} />\n              <Route path={BOARD_WRITE_PATH()} element={<BoardWrite/>} />\n              <Route path={BOARD_UPDATE_PATH(':boardNumber')} element={<BoardUpdate/>} />\n        </Route>\n        <Route path='*' element={<h1>404 not found.</h1>} />\n      </Route>\n    </Routes>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}