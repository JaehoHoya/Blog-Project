{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Layouts/Header/index.tsx\",\n  _s4 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './style.css';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { AUTH_PATH, BOARD_DETAIL_PATH, BOARD_UPDATE_PATH, BOARD_WRITE_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from '../../Constants';\nimport { useCookies } from 'react-cookie';\nimport { useBoardStore, useLoginUserStore } from '../../Stores';\nimport { BOARD_PATH } from '../../Constants/index';\nimport { fileUploadRequest, postBoardReqest } from '../../Apis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// component: 헤더 레이아웃 \nexport default function Header() {\n  _s4();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  //state: path상태 \n  const {\n    pathname\n  } = useLocation();\n  // state: 로그인 유저 상태 \n  const {\n    loginUser,\n    setLoginUser,\n    resetLoginUser\n  } = useLoginUserStore();\n  // state: cookie 상태 \n  const [cookies, setCookie] = useCookies();\n  // state: 로그인 상태 \n  const [isLogin, setLogin] = useState(false);\n  // state: 인증, 메인 ,검색 ,게시물 상세 작성 수정 , 유저페이지 상태 \n\n  const [isAuthPage, setAuthPage] = useState(false);\n  const [isMainPage, setMainPage] = useState(false);\n  const [isSearchPage, setSearchPage] = useState(false);\n  const [isBoardDetailpage, setBoardDetailpage] = useState(false);\n  const [isBoardWritePage, setBoardWritePage] = useState(false);\n  const [isBoardUpdatePage, setBoardUpdatePage] = useState(false);\n  const [isUserPage, setUserPage] = useState(false);\n  /*\n  //const isAuthPage =pathname===AUTH_PATH();\n  const isAuthPage =pathname.startsWith(AUTH_PATH());\n  const isMainPage =pathname===(MAIN_PATH());\n  const isSearchPage =pathname.startsWith(SEARCH_PATH(''));\n  const isBoardDetailpage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_DETAIL_PATH('')); \n  const isBoardWritePage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_WRITE_PATH());\n  const isBoardUpdatePage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_UPDATE_PATH(''));\n  const isUserPage=pathname.startsWith(USER_PATH(''));\n  */\n  // function: 네비게이트 함수\n\n  const navigate = useNavigate();\n\n  // event handler: 로고 클릭 이벤트 처리 함수 \n\n  const onLogoClickHandler = () => {\n    navigate(MAIN_PATH());\n  };\n\n  // component: 검색 버튼 컴포넌트 \n\n  const SearchButton = () => {\n    _s();\n    // state: 검색어 버튼 요소 참조 상태 \n    const searchButtonRef = useRef(null);\n    // state: 검색 버튼 상태 \n    const [status, setStatus] = useState(false);\n    //state; 검색어 상태 \n    const [Word, setWord] = useState('');\n    //state: 검색어 path variable 상태 \n    const {\n      searchWord\n    } = useParams();\n    // event handler: 검색어 변경 이벤트 처리 함수 \n    const onSearchWordHandler = event => {\n      const value = event.target.value;\n      setWord(value);\n    };\n    // event handler: 검색어 키 이벤트 처리 함수 \n    const onSearchWordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!searchButtonRef.current) return;\n      searchButtonRef.current.click();\n    };\n    // event handler: 검색 버튼 클릭 이벤트 처리 함수 \n    const onSearchClickHandler = () => {\n      if (!status) {\n        setStatus(!status);\n        return;\n      }\n      navigate(SEARCH_PATH(Word));\n    };\n    //effect: 검색어 path variable 변경 될때 마다 실행될 함수 \n    useEffect(() => {\n      if (searchWord) {\n        setWord(searchWord);\n        setStatus(true);\n      }\n    }, [searchWord]);\n    //status는 현재 검색 버튼의 상태를 나타냄. false인 경우 검색 버튼이 보이고, true인 경우 검색 입력 상자가 보인다\n    if (!status)\n      // render: 검색버튼 컴포넌트 랜더링(클릭 x false)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Icon-Button\",\n        onClick: onSearchClickHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Icon serch-light-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    // render: 검색버튼 컴포넌트 랜더링(클릭 o true) \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header-Search-Input-Box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Hedaer-Search-Input\",\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        value: Word,\n        onChange: onSearchWordHandler,\n        onKeyDown: onSearchWordKeyDownHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: searchButtonRef,\n        className: \"Icon-Button\",\n        onClick: onSearchClickHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Icon serch-light-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }, this);\n  };\n  // component: 마이페이지 버튼 컴포넌트 \n  _s(SearchButton, \"QjatsFhjeYAiPTyQ7nzCau9RBEA=\", false, function () {\n    return [useParams];\n  });\n  const MyPageButton = () => {\n    _s2();\n    // state: 유저 이메일 path variable 상태 \n    const {\n      userEmail\n    } = useParams();\n\n    // event handler: 마이페이지 버튼 클릭 이벤트 처리함수 \n    const onMyPageButtonClickHandler = () => {\n      if (!loginUser) return;\n      const {\n        email\n      } = loginUser;\n      navigate(USER_PATH(email));\n    };\n    // event handler: 로그아웃 버튼 클릭 이벤트 처리함수 \n    const onSinginOutButtonClickHandler = () => {\n      resetLoginUser();\n      setCookie('accessToken', '', {\n        path: MAIN_PATH(),\n        expires: new Date()\n      });\n      navigate(MAIN_PATH());\n    };\n    // event handler: 로그인 버튼 클릭 이벤트 처리함수 \n    const onSignInButtonClickHandler = () => {\n      navigate(AUTH_PATH());\n    };\n    console.log('isLogin:', isLogin);\n    console.log('userEmail:', userEmail);\n    console.log('loginUser?.email:', loginUser === null || loginUser === void 0 ? void 0 : loginUser.email);\n    // render: 로그아웃 버튼 컴포넌트 렌더링 \n    if (isLogin && userEmail === (loginUser === null || loginUser === void 0 ? void 0 : loginUser.email)) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-button\",\n      onClick: onSinginOutButtonClickHandler,\n      children: '로그아웃'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n    // render: 마이페이지 버튼 컴포넌트 렌더링 \n    if (isLogin) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-button\",\n      onClick: onMyPageButtonClickHandler,\n      children: '마이페이지'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n    // render: 로그인 버튼 컴포넌트 렌더링 \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-button\",\n      onClick: onSignInButtonClickHandler,\n      children: '로그인'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  };\n  // component: 업로드 버튼 컴포넌트 \n  _s2(MyPageButton, \"Va/HwuGsR2I6hAyKIaOosu2dpA4=\", false, function () {\n    return [useParams];\n  });\n  const UpLoadButton = () => {\n    _s3();\n    // state: 게시물 상태 \n    const {\n      title,\n      content,\n      boardImageFileList,\n      resetBoard\n    } = useBoardStore();\n\n    // event handler: 업로드 버튼 클릭 이벤트 처리 함수 \n    const onUpLoadButtonClickHandler = async () => {\n      const accessToken = cookies.accessToken;\n      if (!accessToken) return;\n      const boardImageList = [];\n      for (const file of boardImageFileList) {\n        const data = new FormData();\n        data.append('file', file);\n        const url = await fileUploadRequest(data);\n        if (url) boardImageList.push(url);\n      }\n      const requestBody = {\n        title,\n        content,\n        boardImageList\n      };\n      postBoardReqest(requestBody, accessToken).then(post);\n    };\n    if (title && content)\n      // render: 업로드 버튼 컴포넌트 렌더링\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"black-button\",\n        onClick: onUpLoadButtonClickHandler,\n        children: '업로드'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this);\n\n    // render: 업로드 불가 버튼 컴포넌트 렌더링\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disable-button\",\n      children: '업로드'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  };\n\n  // effect: path가 변경 될때 마다 실핼될 함수 \n  _s3(UpLoadButton, \"ITVlWGTP4sk1yEm9QtDS8OVHBmU=\", false, function () {\n    return [useBoardStore];\n  });\n  useEffect(() => {\n    const isAuthPage = pathname.startsWith(AUTH_PATH());\n    setAuthPage(isAuthPage);\n    const isMainPage = pathname === MAIN_PATH();\n    setMainPage(isMainPage);\n    const isSearchPage = pathname.startsWith(SEARCH_PATH(''));\n    setSearchPage(isSearchPage);\n    const isBoardDetailpage = pathname.startsWith(BOARD_PATH() + '/' + BOARD_DETAIL_PATH(''));\n    setBoardDetailpage(isBoardDetailpage);\n    const isBoardWritePage = pathname.startsWith(BOARD_PATH() + '/' + BOARD_WRITE_PATH());\n    setBoardWritePage(isBoardWritePage);\n    const isBoardUpdatePage = pathname.startsWith(BOARD_PATH() + '/' + BOARD_UPDATE_PATH(''));\n    setBoardUpdatePage(isBoardUpdatePage);\n    const isUserPage = pathname.startsWith(USER_PATH(''));\n    setUserPage(isUserPage);\n  }, [pathname]);\n  useEffect(() => {\n    setLogin(loginUser !== null);\n  }, [loginUser]);\n  // render: 헤더 레이아웃 렌더링 \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header-Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header-Left-Box\",\n        onClick: onLogoClickHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Icon-Box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Icon Logo-Dark-Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Header-Logo\",\n          children: 'LE SSERAFIM FAN CLUB'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header-Right-Box\",\n        children: [(isAuthPage || isMainPage || isSearchPage || isBoardDetailpage) && /*#__PURE__*/_jsxDEV(SearchButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 82\n        }, this), (isMainPage || isBoardDetailpage || isSearchPage || isUserPage) && /*#__PURE__*/_jsxDEV(MyPageButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 83\n        }, this), (isBoardWritePage || isBoardUpdatePage) && /*#__PURE__*/_jsxDEV(UpLoadButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n_s4(Header, \"2FGg0akWCLhdcGzEd6djt8DQT28=\", false, function () {\n  return [useLocation, useLoginUserStore, useCookies, useNavigate];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useNavigate","useParams","AUTH_PATH","BOARD_DETAIL_PATH","BOARD_UPDATE_PATH","BOARD_WRITE_PATH","MAIN_PATH","SEARCH_PATH","USER_PATH","useCookies","useBoardStore","useLoginUserStore","BOARD_PATH","fileUploadRequest","postBoardReqest","jsxDEV","_jsxDEV","Header","_s4","_s","$RefreshSig$","_s2","_s3","pathname","loginUser","setLoginUser","resetLoginUser","cookies","setCookie","isLogin","setLogin","isAuthPage","setAuthPage","isMainPage","setMainPage","isSearchPage","setSearchPage","isBoardDetailpage","setBoardDetailpage","isBoardWritePage","setBoardWritePage","isBoardUpdatePage","setBoardUpdatePage","isUserPage","setUserPage","navigate","onLogoClickHandler","SearchButton","searchButtonRef","status","setStatus","Word","setWord","searchWord","onSearchWordHandler","event","value","target","onSearchWordKeyDownHandler","key","current","click","onSearchClickHandler","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyDown","ref","MyPageButton","userEmail","onMyPageButtonClickHandler","email","onSinginOutButtonClickHandler","path","expires","Date","onSignInButtonClickHandler","console","log","UpLoadButton","title","content","boardImageFileList","resetBoard","onUpLoadButtonClickHandler","accessToken","boardImageList","file","data","FormData","append","url","push","requestBody","then","post","startsWith","id","_c","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Layouts/Header/index.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useEffect, useRef, useState } from 'react';\nimport './style.css';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { AUTH_PATH, BOARD_DETAIL_PATH, BOARD_UPDATE_PATH, BOARD_WRITE_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from '../../Constants';\nimport { useCookies } from 'react-cookie';\nimport { useBoardStore, useLoginUserStore } from '../../Stores';\nimport { BOARD_PATH } from '../../Constants/index';\nimport { fileUploadRequest, postBoardReqest } from '../../Apis';\nimport { PostBoardResquestDto } from '../../Apis/Request/Board';\n\n\n// component: 헤더 레이아웃 \nexport default function Header() {\n//state: path상태 \nconst{pathname}=useLocation();\n// state: 로그인 유저 상태 \nconst{loginUser,setLoginUser,resetLoginUser}=useLoginUserStore();\n// state: cookie 상태 \nconst [cookies,setCookie]=useCookies();\n// state: 로그인 상태 \nconst[isLogin,setLogin]=useState<boolean>(false);\n// state: 인증, 메인 ,검색 ,게시물 상세 작성 수정 , 유저페이지 상태 \n\nconst[isAuthPage,setAuthPage]=useState<boolean>(false);\nconst[isMainPage,setMainPage]=useState<boolean>(false);\nconst[isSearchPage,setSearchPage]=useState<boolean>(false);\nconst[isBoardDetailpage,setBoardDetailpage]=useState<boolean>(false);\nconst[isBoardWritePage,setBoardWritePage]=useState<boolean>(false);\nconst[isBoardUpdatePage,setBoardUpdatePage]=useState<boolean>(false);\nconst[isUserPage,setUserPage]=useState<boolean>(false);\n/*\n//const isAuthPage =pathname===AUTH_PATH();\nconst isAuthPage =pathname.startsWith(AUTH_PATH());\nconst isMainPage =pathname===(MAIN_PATH());\nconst isSearchPage =pathname.startsWith(SEARCH_PATH(''));\nconst isBoardDetailpage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_DETAIL_PATH('')); \nconst isBoardWritePage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_WRITE_PATH());\nconst isBoardUpdatePage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_UPDATE_PATH(''));\nconst isUserPage=pathname.startsWith(USER_PATH(''));\n*/\n// function: 네비게이트 함수\n\nconst navigate=useNavigate();\n\n// event handler: 로고 클릭 이벤트 처리 함수 \n\nconst onLogoClickHandler=()=>{\n  navigate(MAIN_PATH());\n}\n\n// component: 검색 버튼 컴포넌트 \n\nconst SearchButton=()=>{\n\n// state: 검색어 버튼 요소 참조 상태 \nconst searchButtonRef=useRef<HTMLDivElement | null>(null);\n// state: 검색 버튼 상태 \nconst[status,setStatus]=useState<Boolean>(false);\n//state; 검색어 상태 \nconst[Word,setWord]=useState<string>('');\n//state: 검색어 path variable 상태 \nconst {searchWord}=useParams();\n// event handler: 검색어 변경 이벤트 처리 함수 \nconst onSearchWordHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n\n    const value=event.target.value;\n    setWord(value); \n};\n// event handler: 검색어 키 이벤트 처리 함수 \nconst onSearchWordKeyDownHandler=(event:KeyboardEvent<HTMLInputElement>)=>{\n    if(event.key !=='Enter') return;\n    if(!searchButtonRef.current) return;\n    searchButtonRef.current.click();\n\n};\n// event handler: 검색 버튼 클릭 이벤트 처리 함수 \nconst onSearchClickHandler=()=>{\n  if(!status){\n    setStatus(!status);\n    return;\n  }\n  navigate(SEARCH_PATH(Word))\n};\n//effect: 검색어 path variable 변경 될때 마다 실행될 함수 \nuseEffect(()=>{\n  if(searchWord) {\n    setWord(searchWord);\n    setStatus(true);\n  }\n},[searchWord]);\n//status는 현재 검색 버튼의 상태를 나타냄. false인 경우 검색 버튼이 보이고, true인 경우 검색 입력 상자가 보인다\nif (!status)\n// render: 검색버튼 컴포넌트 랜더링(클릭 x false)\nreturn (<div className='Icon-Button' onClick={onSearchClickHandler}>\n              <div className='Icon serch-light-icon'></div>\n        </div>\n       );\n// render: 검색버튼 컴포넌트 랜더링(클릭 o true) \nreturn(\n  <div className='Header-Search-Input-Box'>\n        <input className='Hedaer-Search-Input'type='text' placeholder='검색어를 입력해주세요.' value={Word} onChange={onSearchWordHandler} onKeyDown={onSearchWordKeyDownHandler}/>\n        <div ref={searchButtonRef} className='Icon-Button' onClick={onSearchClickHandler}>\n             <div className='Icon serch-light-icon'>\n             </div>\n        </div>\n\n  </div>\n)\n}\n  // component: 마이페이지 버튼 컴포넌트 \nconst MyPageButton=()=>{\n\n// state: 유저 이메일 path variable 상태 \nconst {userEmail}=useParams();\n\n// event handler: 마이페이지 버튼 클릭 이벤트 처리함수 \nconst onMyPageButtonClickHandler=()=>{\n  if(!loginUser) return;\n  const{email}=loginUser;\n \n  navigate(USER_PATH(email));\n};\n// event handler: 로그아웃 버튼 클릭 이벤트 처리함수 \nconst onSinginOutButtonClickHandler=()=>{\n  resetLoginUser();\n  setCookie('accessToken','',{path:MAIN_PATH(),expires: new Date()})\n  navigate(MAIN_PATH());\n};\n// event handler: 로그인 버튼 클릭 이벤트 처리함수 \nconst onSignInButtonClickHandler=()=>{\n  navigate(AUTH_PATH());\n};\n\nconsole.log('isLogin:', isLogin);\nconsole.log('userEmail:', userEmail);\nconsole.log('loginUser?.email:', loginUser?.email);\n// render: 로그아웃 버튼 컴포넌트 렌더링 \nif(isLogin && userEmail ===loginUser?.email)\nreturn<div className='white-button' onClick={onSinginOutButtonClickHandler}>{'로그아웃'}</div>;\n// render: 마이페이지 버튼 컴포넌트 렌더링 \nif(isLogin)\nreturn<div className='white-button' onClick={onMyPageButtonClickHandler}>{'마이페이지'}</div>;\n// render: 로그인 버튼 컴포넌트 렌더링 \nreturn<div className='black-button'onClick={onSignInButtonClickHandler}>{'로그인'}</div>;\n\n};\n  // component: 업로드 버튼 컴포넌트 \nconst UpLoadButton=()=>{\n\n// state: 게시물 상태 \nconst {title,content,boardImageFileList,resetBoard}=useBoardStore();\n\n// event handler: 업로드 버튼 클릭 이벤트 처리 함수 \nconst onUpLoadButtonClickHandler= async()=>{\n    \n    const accessToken=cookies.accessToken;\n    if(!accessToken) return;\n\n    const boardImageList:string[]=[];\n\n    \n    for(const file of boardImageFileList){\n\n      const data=new FormData();\n      data.append('file',file);\n\n      const url=await fileUploadRequest(data);\n      if(url) boardImageList.push(url);\n\n    }\n    const requestBody:PostBoardResquestDto={\n      title,content,boardImageList\n    }\n    postBoardReqest(requestBody,accessToken).then(post)\n\n}\nif(title&&content)\n// render: 업로드 버튼 컴포넌트 렌더링\nreturn<div className='black-button'onClick={onUpLoadButtonClickHandler}>{'업로드'}</div>;\n\n// render: 업로드 불가 버튼 컴포넌트 렌더링\nreturn<div className='disable-button'>{'업로드'}</div>;\n\n\n};\n\n// effect: path가 변경 될때 마다 실핼될 함수 \nuseEffect(()=>{\n\n  const isAuthPage =pathname.startsWith(AUTH_PATH());\n        setAuthPage(isAuthPage);\n  const isMainPage =pathname===(MAIN_PATH());\n        setMainPage(isMainPage);\n  const isSearchPage =pathname.startsWith(SEARCH_PATH(''));\n        setSearchPage(isSearchPage);\n  const isBoardDetailpage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_DETAIL_PATH('')); \n        setBoardDetailpage(isBoardDetailpage);\n  const isBoardWritePage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_WRITE_PATH());\n        setBoardWritePage(isBoardWritePage);\n  const isBoardUpdatePage=pathname.startsWith(BOARD_PATH()+'/'+BOARD_UPDATE_PATH(''));\n        setBoardUpdatePage(isBoardUpdatePage)\n  const isUserPage=pathname.startsWith(USER_PATH(''));\n        setUserPage(isUserPage);\n\n},[pathname]);\n\n\nuseEffect(()=>{\n  setLogin(loginUser !==null);\n},[loginUser])\n// render: 헤더 레이아웃 렌더링 \n  return (\n    <div id= 'Header'>\n      <div className='Header-Container'>\n            <div className='Header-Left-Box' onClick={onLogoClickHandler}>\n                  <div className='Icon-Box'>\n                      <div className='Icon Logo-Dark-Icon'></div>\n                  </div>\n                  <div className='Header-Logo'>{'LE SSERAFIM FAN CLUB'}</div>\n            </div>\n            <div className='Header-Right-Box'>\n              { (isAuthPage || isMainPage || isSearchPage ||isBoardDetailpage)&& <SearchButton/>}\n              {(isMainPage || isBoardDetailpage || isSearchPage || isUserPage )&& <MyPageButton/> }\n              {(isBoardWritePage ||isBoardUpdatePage  )&& <UpLoadButton/>}\n\n            </div>\n      </div>\n\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}