{"ast":null,"code":"import axios from \"axios\";\nconst DOMAIN = 'http://localhost:8080';\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\nconst authorization = accessToken => {\n  return {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n};\nconst SIGIN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\n_c = SIGIN_IN_URL;\nconst SIGIN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\n_c2 = SIGIN_UP_URL;\nexport const SignInRequest = async requestBody => {\n  const result = await axios.post(SIGIN_IN_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\n_c3 = SignInRequest;\nexport const SignUpRequest = async requestBody => {\n  const result = await axios.post(SIGIN_UP_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\n_c4 = SignUpRequest;\nconst GET_BOARD_URL = boardNumber => `${API_DOMAIN}/board/$(boardNumber)`;\n_c5 = GET_BOARD_URL;\nconst POST_BOARD_URL = () => `${API_DOMAIN}/board`;\n_c6 = POST_BOARD_URL;\nexport const getBoardRequest = async boardNumber => {\n  const result = await axios.get(GET_BOARD_URL(boardNumber)).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response) return null;\n    const responseBody = error.res;\n  });\n  return result;\n};\nexport const postBoardReqest = async (requestBody, accessToken) => {\n  const result = await axios.post(POST_BOARD_URL(), requestBody, authorization(accessToken)).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nconst GET_SIGN_USER_URL = () => `${API_DOMAIN}/user`;\n_c7 = GET_SIGN_USER_URL;\nexport const getSignInUserRequest = async accessToken => {\n  const result = await axios.get(GET_SIGN_USER_URL(), authorization(accessToken)).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nconst FILE_DOMAIN = `${DOMAIN}/file`;\nconst FILE_UPLOAD_URL = () => `${FILE_DOMAIN}/upload`;\n_c8 = FILE_UPLOAD_URL;\nconst multipartFormData = {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n};\nexport const fileUploadRequest = async data => {\n  const result = await axios.post(FILE_UPLOAD_URL(), data, multipartFormData).then(response => {\n    const responsBody = response.data;\n    return responsBody;\n  }).catch(error => {\n    return null;\n  });\n  return result;\n};\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"SIGIN_IN_URL\");\n$RefreshReg$(_c2, \"SIGIN_UP_URL\");\n$RefreshReg$(_c3, \"SignInRequest\");\n$RefreshReg$(_c4, \"SignUpRequest\");\n$RefreshReg$(_c5, \"GET_BOARD_URL\");\n$RefreshReg$(_c6, \"POST_BOARD_URL\");\n$RefreshReg$(_c7, \"GET_SIGN_USER_URL\");\n$RefreshReg$(_c8, \"FILE_UPLOAD_URL\");","map":{"version":3,"names":["axios","DOMAIN","API_DOMAIN","authorization","accessToken","headers","Authorization","SIGIN_IN_URL","_c","SIGIN_UP_URL","_c2","SignInRequest","requestBody","result","post","then","response","responseBody","data","catch","error","_c3","SignUpRequest","_c4","GET_BOARD_URL","boardNumber","_c5","POST_BOARD_URL","_c6","getBoardRequest","get","res","postBoardReqest","GET_SIGN_USER_URL","_c7","getSignInUserRequest","FILE_DOMAIN","FILE_UPLOAD_URL","_c8","multipartFormData","fileUploadRequest","responsBody","$RefreshReg$"],"sources":["/Users/jeongjaeho/Desktop/project/Board/frontend/src/Board/Apis/index.ts"],"sourcesContent":["import axios from \"axios\";\nimport { SignInRequestDto,SignUpRequestDto } from \"./Request/Auth\";\nimport { error } from \"console\";\nimport { ResponseDto } from \"./Response\";\nimport { SignInResponseDto, SignUpResponseDto } from \"./Response/Auth\";\nimport { GetSignInUserResponseDto } from \"./Response/User\";\nimport { PostBoardResquestDto } from \"./Request/Board\";\nimport { PostBoardResponseDto } from \"./Response/Board\";\nimport GetBoardResponseDto from \"./Response/Board/get-board.response.dto\";\n\nconst DOMAIN ='http://localhost:8080';\n\n\nconst API_DOMAIN =`${DOMAIN}/api/v1`;\n\nconst authorization =(accessToken:string)=>{\n    return{headers:{Authorization:`Bearer ${accessToken}`}}\n};\nconst SIGIN_IN_URL =()=>`${API_DOMAIN}/auth/sign-in`;\nconst SIGIN_UP_URL =()=>`${API_DOMAIN}/auth/sign-up`;\n\nexport const SignInRequest=async(requestBody:SignInRequestDto)=>{\n    const result =await axios.post(SIGIN_IN_URL(),requestBody)\n    .then(response=>{\n        const responseBody:SignInResponseDto=response.data;\n        return responseBody;\n    })\n    .catch(error=>{\n        if(!error.response.data) return null;\n        const responseBody:ResponseDto=error.response.data;\n        return responseBody;\n    })\n    return result;\n}   \n\nexport const SignUpRequest=async(requestBody:SignUpRequestDto)=>{\n\n    const result =await axios.post(SIGIN_UP_URL(),requestBody)\n    .then(response=>{\n        const responseBody:SignUpResponseDto=response.data;\n        return responseBody;\n    })\n    .catch(error=>{\n        if(!error.response.data) return null;\n        const responseBody:ResponseDto=error.response.data;\n        return responseBody;\n\n\n    });\n\n\n    return result;\n}\n\nconst GET_BOARD_URL =(boardNumber:number |string)=>`${API_DOMAIN}/board/$(boardNumber)`;\nconst POST_BOARD_URL =()=>`${API_DOMAIN}/board`;\n\nexport const getBoardRequest =async(boardNumber:number |string)=>{\n\n    const result =await axios.get(GET_BOARD_URL(boardNumber))\n    .then(response=>{\n\n        const responseBody:GetBoardResponseDto =response.data\n        return responseBody;\n\n    })\n    .catch(error=>{\n\n        if(!error.response) return null;\n        const responseBody:ResponseDto=error.res\n\n\n    })\n\n    return result;\n}\n\n\n\n\nexport const postBoardReqest = async(requestBody:PostBoardResquestDto,accessToken:string)=>{\n    const result =await axios.post(POST_BOARD_URL(),requestBody,authorization(accessToken))\n    .then(response=>{\n        const responseBody:PostBoardResponseDto=response.data;\n        return responseBody;\n    })\n    .catch(error=>{\n        if(!error.response) return null;\n        const responseBody:ResponseDto=error.response.data;\n        return responseBody;\n    })\n    return result;\n}\n\n\n\n\n\n\n\nconst GET_SIGN_USER_URL =()=> `${API_DOMAIN}/user`;\nexport const getSignInUserRequest= async(accessToken:string)=>{\n    const result =await axios.get(GET_SIGN_USER_URL(),authorization(accessToken))\n    .then(response=>{\n        const responseBody:GetSignInUserResponseDto=response.data;\n        return responseBody;\n    })\n    .catch(error=>{\n        if(!error.response) return null;\n        const responseBody:ResponseDto=error.response.data;\n        return responseBody;\n    });\n    return result;\n\n}\n\nconst FILE_DOMAIN =`${DOMAIN}/file`;\n\nconst FILE_UPLOAD_URL=()=>`${FILE_DOMAIN}/upload`;\n\nconst multipartFormData={headers:{'Content-Type':'multipart/form-data'}}\n\nexport const fileUploadRequest= async(data: FormData)=>{\n    const result= await axios.post(FILE_UPLOAD_URL(),data,multipartFormData)\n    .then(response=>{\n        const responsBody:string=response.data;\n        return responsBody;\n    })\n    .catch(error=>{\n        return null;\n    })\n    return result;\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}